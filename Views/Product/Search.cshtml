@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <link rel="stylesheet" href="~/Content/web.play.with.me.table.show.data.css">
</head>
<body>

    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        <div class="config-max-width padding-container">
            @Html.Partial("~/Views/Shared/Product/SearchParameter.cshtml")

            <button type="button" onclick="Search()">Tìm kiếm</button>

            @Html.Partial("~/Views/Shared/Product/SearchResult.cshtml")
        </div>
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.paging.js"></script>
    <script>
        // Tham số tìm kiếm
        let codeOrBarcode;
        let name;
        let combo;

        // Mục đích lấy số lượng trong kết quả trả về phục vụ phân trang
        async function Search() {
            codeOrBarcode = GetValueInputById("code-or-isbn","");
            name = GetValueInputById("product-name-id","");
            combo = GetValueInputById("combo-id","");

            let url = "/Product/SearchProductCount";
            const searchParams = new URLSearchParams();
            SetSearchParameter(searchParams);
            let resObj = await RequestHttpGetPromise(searchParams, url);
            if (DEBUG) {
                console.log("responseText: " + resObj.responseText);
            }
            // Lấy số lượng sản phẩm trong kết quả trả về
            countItem = parseInt(resObj.responseText);
            if (countItem == 0) {
                document.getElementById("empty-result").style.display = "block";
                document.getElementById("search-result").style.display = "none";

                document.getElementsByClassName("wraper-pagination")[0].innerHTML = "";
                return;
            }

            document.getElementById("empty-result").style.display = "none";
            document.getElementById("search-result").style.display = "block";

            maxPage = Math.floor(countItem / itemOnPage);
            if (countItem % itemOnPage != 0)
                maxPage = maxPage + 1;
            currentPage = -1; // Làm mới currentPage
            // Lấy dữ liệu cho page 1
            ChangePage(1, "/Product/ChangePage");
        }

        function SetSearchParameter(searchParams) {
            searchParams.append("codeOrBarcode", codeOrBarcode);
            searchParams.append("name", name);
            searchParams.append("combo", combo);
        }

        function ShowSearchingResult(resObj) {
            let listProduct = JSON.parse(resObj.responseText);

            // Làm trống bảng
            DeleteRowsExcludeHead(document.getElementById("myTable"));

            // Show
            let table = document.getElementById("myTable");
            let length = listProduct.length;
            for (let i = 0; i < length; i++) {
                let product = listProduct[i];
                let row = table.insertRow(-1);

                // Insert new cells (<td> elements)
                let cell1 = row.insertCell(0);
                let cell2 = row.insertCell(1);
                let cell3 = row.insertCell(2);

                // Id
                cell1.innerHTML = product.id;
                cell1.style.display = "none";

                // Image
                let img = document.createElement("img");
                if (product.imageSrc.length > 0) {
                    img.setAttribute("src", product.imageSrc[0]);
                } else {
                    img.setAttribute("src", srcNoImageThumbnail);
                }
                img.height = thumbnailHeight;
                img.width = thumbnailWidth;
                img.className = "go-to-detail-product";
                img.onclick = function () {
                    // Lấy id
                    let id = Number(this.parentElement.parentElement.children[0].innerHTML);
                    GoToDetailItem(id);
                };
                cell2.append(img);

                // Tên
                let pName = document.createElement("p");
                pName.innerHTML = product.name;
                //pName.className = "go-to-detail-product";
                //pName.onclick = function () {
                //    // Lấy id
                //    let id = Number(this.parentElement.parentElement.children[0].innerHTML);
                //    GoToDetailItem(id);
                //};
                cell3.append(pName);
            }
        }

        function GoToDetailItem(id) {
            if (DEBUG) {
                console.log("GoToDetailItem Start");
                console.log("product id: " + id);
            }
            if (isNaN(id))
                return;

            window.open("UpdateDelete?id=" + id);
        }
    </script>
</body>
</html>

