@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <link rel="stylesheet" href="~/Content/web.play.with.me.table.show.data.css">
    <style>
        .fjavmsiin89{
            color:aqua;
        }
        .ffxafj8kafn8{
            color:red;
        }
        .cvAncz980 {
            display: flex;
        }
        .pro-status {
            margin-right: 20px;
            display: flex;
            align-items: center;
        }
        .kmaZvc29 {
            margin-left: 20px;
        }

        .fmx09gx8 {
            background-color: white;
            padding: 10px;
            margin: 10px 0px 10px 0px;
            border-radius: 2px;
            display: flex;
            flex-wrap: wrap;
        }

        .gfdgfghxg676 {
            width: 120px;
        }
    </style>
</head>
<body>
    <div id="biggestContainer">
        <div class="config-max-width padding-container">
            <div>
                <div>
                    <label for="publisher-id">Nhà phát hành:</label>
                    <input list="list-Publisher" class="config-max-width margin-vertical"
                           id="publisher-id">
                    <datalist id="list-Publisher"></datalist>
                </div>
                <br>
                <div>
                    <label for="code-or-isbn">Mã sản phẩm hoặc ISBN:</label><br>
                    <input class="config-max-width margin-vertical" type="text" id="code-or-isbn" value="">
                </div>
                <br>

                @Html.Partial("~/Views/Shared/ProductNameSelect.cshtml")
                <br>
                @Html.Partial("~/Views/Shared/ComboSelect.cshtml")
                <br />
            </div>

            <button type="button" title="Kết quả trả về được sắp xếp tồn kho tăng dần"
                    onclick="Search()">
                Tìm kiếm
            </button>
            <br />

            <div>
                <div id="empty-result" style="display:none">
                    <p>Kết quả trống</p>
                </div>
                <div id="search-result" style="display:none">
                    <div class="fmx09gx8" title="Lọc kết quả tìm kiếm và hiển thị">
                        <div class="pro-status">
                            <input type="radio" id="status-all" name="status-avxgbhf"
                                   class="kmaZvc29" checked
                                   onchange="FilterProductAll()">
                            <label for="status-all">Tất Cả</label>
                        </div>
                        <div class="pro-status">
                            <input type="radio" id="status-normal" name="status-avxgbhf"
                                   class="kmaZvc29"
                                   onchange="FilterProductNormal()">
                            <label for="status-normal">Đang Bán</label>
                        </div>
                        <div class="pro-status">
                            <input type="radio" id="status-banned" name="status-avxgbhf"
                                   class="kmaZvc29"
                                   onchange="FilterProductDisable()">
                            <label for="status-banned">Dừng Bán</label>
                        </div>

                        <div class="pro-status"
                             title="Sản phẩm có tồn kho bằng 0. Bao gồm cả sản phẩm dừng kinh doanh">
                            <input type="radio" id="quantity-zero" name="status-avxgbhf"
                                   class="kmaZvc29"
                                   onchange="FilterProductQuantityZero()">
                            <label for="quantity-zero">Hết Hàng</label>
                        </div>

                        <div class="pro-status"
                             title="Sản phẩm có tồn kho bằng 0. Không bao gồm sản phẩm dừng kinh doanh">
                            <input type="radio" id="quantity-zero" name="status-avxgbhf"
                                   class="kmaZvc29"
                                   onchange="FilterProductNormalQuantityZero()">
                            <label for="quantity-zero">Đang Bán Và Hết Hàng</label>
                        </div>

                        <div class="pro-status">
                            <input type="radio" id="pro-no-price" name="status-avxgbhf"
                                   class="kmaZvc29"
                                   title="Sản phẩm có giá bằng 0, thậm chí nhỏ hơn 0"
                                   onchange="FilterProductNoPrice()">
                            <label for="pro-no-price">Chưa Set Giá</label>
                        </div>

                        <div class="pro-status">
                            <input type="radio" id="fzadgfgrj9567af" name="status-avxgbhf" class="kmaZvc29"
                                   title="Giá bán có giá lớn hơn hoặc bằng giá trị bên cạnh"
                                   onchange="FilterProductPriceBigger()">
                            <label for="fzadgfgrj9567af">Giá Lớn Hơn</label>
                            <input type="number" class="price-bigger gfdgfghxg676"
                                   value="0" />
                            <label>đ</label>
                        </div>

                        <div class="pro-status">
                            <input type="radio" id="ghjsf834gh5sg" name="status-avxgbhf" class="kmaZvc29"
                                   title="Giá bán nhỏ hơn hoặc bằng giá trị bên cạnh"
                                   onchange="FilterProductPriceSmaller()">
                            <label for="ghjsf834gh5sg">Giá Nhỏ Hơn</label>
                            <input type="number" class="price-smaller gfdgfghxg676"
                                   value="0" />
                            <label>đ</label>
                        </div>
                    </div>
                    <div id="count-result"></div>
                    <table id="myTable">
                        <tr>
                            <th style="display:none"></th>
                            <th style="width:200px">Ảnh</th>
                            <th title="Gồm tên combo sau dấu - nếu có. Tên đỏ biểu hiện sản phẩm hết hàng, xanh lơ biểu hiện không kinh doanh">Tên</th>
                            <th> Giá Bìa</th>
                            <th title="Đỏ biểu hiện số lượng tồn kho là 0. Click để sắp xếp tăng hoặc giảm dần tồn kho sản phẩm ĐANG HIỂN THỊ"
                                style="cursor:pointer;" onclick="ArrangeQuantity()">Số Lượng</th>
                        </tr>
                    </table>
                </div>
            </div>

        </div>
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.action.common.js"></script>
    <script>
        // Tham số tìm kiếm
        let publisher;
        let codeOrBarcode;
        let name;
        let combo;
        let proStatus;
        let listProduct = [];// Kết quả trả về

        GetListPublisher();
        GetListProductName();
        GetListCombo();

        // Mục đích lấy số lượng trong kết quả trả về phục vụ phân trang
        async function Search() {
            listProduct = [];// danh sách server trả về sắp xếp tồn kho tăng dần
            listProductWillShow = [];// danh sách sau khi lọc và được hiển thị

            let url = "/Product/SearchProduct";
            const searchParams = new URLSearchParams();
            SetSearchParameter(searchParams);
            ShowCircleLoader();
            let responseDB = await RequestHttpGetPromise(searchParams, url);
            RemoveCircleLoader();
            if (responseDB.responseText != "null") {
                // Kết quả trả về đã được sắp xếp tăng dần tồn kho
                listProduct = JSON.parse(responseDB.responseText);
            }
            else {
                listProduct = [];
                listProductWillShow = [];
            }

            // Lấy số lượng sản phẩm trong kết quả trả về
            let length = listProduct.length;
            if (length == 0) {
                document.getElementById("empty-result").style.display = "block";
                document.getElementById("search-result").style.display = "none";
                return;
            }

            document.getElementById("empty-result").style.display = "none";
            document.getElementById("search-result").style.display = "block";
            document.getElementById("status-all").checked = true;
            FilterProductAll();
        }

        function SetSearchParameter(searchParams) {
            publisher = GetValueInputById("publisher-id", "");
            codeOrBarcode = GetValueInputById("code-or-isbn", "");
            name = GetValueInputById("product-name-id", "");
            combo = GetValueInputById("combo-id", "");
            //proStatus = document.querySelector('input[name="status-avxgbhf"]:checked').value

            searchParams.append("publisher", publisher);
            searchParams.append("codeOrBarcode", codeOrBarcode);
            searchParams.append("name", name);
            searchParams.append("combo", combo);
        }

        function ShowSearchingResult(list) {
            document.getElementById("count-result").innerHTML = "";
            let table = document.getElementById("myTable");
            // Làm trống bảng
            DeleteRowsExcludeHead(table);

            let length = list.length;
            document.getElementById("count-result").innerHTML = length + " sản phẩm";
            if (length == 0)
                return;

            // Show
            for (let i = 0; i < length; i++) {
                let product = list[i];
                let row = table.insertRow(-1);

                // Insert new cells (<td> elements)
                let cell1 = row.insertCell(0);
                let cell2 = row.insertCell(1);
                let cell3 = row.insertCell(2);
                let cell4 = row.insertCell(3);
                let cell5 = row.insertCell(4);

                // Id
                cell1.innerHTML = product.id;
                cell1.style.display = "none";

                // Image
                let img = document.createElement("img");
                if (product.imageSrc.length > 0) {
                    img.setAttribute("src", Get320VersionOfImageSrc(product.imageSrc[0]));
                } else {
                    img.setAttribute("src", srcNoImageThumbnail);
                }
                img.height = thumbnailHeight;
                img.width = thumbnailWidth;
                img.className = "go-to-detail-product";
                img.onclick = function () {
                    // Lấy id
                    let id = Number(this.parentElement.parentElement.children[0].innerHTML);
                    GoToDetailItem(id);
                };
                cell2.append(img);

                // Tên: tên + " - " + tên combo
                let pName = document.createElement("p");
                if (product.comboName == "null" || product.comboName.length == 0) {
                    pName.innerHTML = product.name;
                }
                else {
                    pName.innerHTML = product.name + " - " + product.comboName;
                }
                if (product.status == 2)// ngừng kinh doanh
                {
                    pName.className = "fjavmsiin89";
                }
                else if (product.quantity == 0) {
                    pName.className = "ffxafj8kafn8";
                }
                //pName.className = "go-to-detail-product";
                //pName.onclick = function () {
                //    // Lấy id
                //    let id = Number(this.parentElement.parentElement.children[0].innerHTML);
                //    GoToDetailItem(id);
                //};
                cell3.append(pName);

                // Giá Bìa
                cell4.innerHTML = product.bookCoverPrice;

                // Tồn kho
                let pQuantity = document.createElement("p");
                pQuantity.innerHTML = product.quantity;
                if (product.quantity == 0) {
                    pQuantity.className = "ffxafj8kafn8";
                }
                cell5.append(pQuantity);
            }
        }

        function GoToDetailItem(id) {
            if (isNaN(id))
                return;

            window.open("UpdateDelete?id=" + id);
        }

        function ArrangeQuantity() {
            length = listProductWillShow.length;
            if (length == 0) {
                return;
            }

            let listProductTemp = [];
            // listProductWillShow được lọc cũng sắp xếp tăng dần tồn kho
            for (let i = 0; i < length - 1; i++) {
                listProductTemp.push(listProductWillShow[length - 1 - i]);
            }
            listProductWillShow = listProductTemp;

            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductAll() {
            listProductWillShow = listProduct;
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductNormal() {
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].status == 0) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductDisable() {
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].status != 0) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductQuantityZero() {
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].quantity == 0) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductNormalQuantityZero() {
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].quantity == 0 && listProduct[i].status == 0) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductPriceBigger() {
            let checkedPrice = document.getElementsByClassName("price-bigger")[0].value;
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].bookCoverPrice >= checkedPrice) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductPriceSmaller() {
            let checkedPrice = document.getElementsByClassName("price-smaller")[0].value;
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].bookCoverPrice >= checkedPrice) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }

        function FilterProductNoPrice() {
            listProductWillShow = [];
            let length = listProduct.length;
            if (length == 0)
                return;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].bookCoverPrice <= 0) {
                    listProductWillShow.push(listProduct[i]);
                }
            }
            ShowSearchingResult(listProductWillShow);
        }
    </script>
</body>
</html>

