@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <style>
        .status-container {
            display: flex;
            padding: 10px;
            background-color: white;
            flex-wrap: wrap;
            border-radius: 3px;
            position: sticky;
            top: 0;
        }

        .sample-order {
            display: none;
            margin-top: 20px;
            border-radius: 3px;
            background-color: white;
            width: 100%;
        }

        .nvsflAB87 {
            border: none;
            flex-grow: 1;
            background-color: white;
            padding-top: 10px;
            padding-bottom: 10px;
        }

            .nvsflAB87:hover {
                color: #ee4d2d !important;
            }

        .order-header {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .fxASnxvd {
            line-height: 24px;
            color: #ee4d2d;
            text-align: right;
            text-transform: uppercase;
            white-space: nowrap;
            margin: 10px;
        }

        .sample-item-container {
            display: none;
            justify-content: center;
            align-items: center;
            padding: 10px;
            width: 100%;
        }

        .sample-payment {
            display: none;
            justify-content: flex-end;
            align-items: center;
            padding: 15px;
        }

        .name-quantity {
            width: 100%;
            padding: 5px 20px;
        }

        .model-icon {
            width: 80px;
            height: 80px;
            flex-shrink: 0;
            border: 1px solid #e1e1e1;
            background: #e1e1e1;
        }

        .item-money {
            /*white-space: nowrap;*/
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .j2En5csA {
            margin: 0 4px 0 0;
            text-decoration-line: line-through;
            color: #000;
            opacity: .26;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .ffZM87hf {
            word-break: break-all;
        }

        .result-container {
            width: 100%;
        }

        .payment-infor-container {
            background: #fffefb;
            /*box-shadow: 0 1px 1px 0 rgba(0,0,0,.05);*/
            /*border-top: 1px solid #f1f0ed;*/
            border-style: solid;
            border-width: 0px;
            /*padding-top: 15px;*/
        }

        .money-title {
            width: 120px;
        }

        .money-padding {
            min-width: 130px;
            text-align: end;
        }

        .money-sum {
            height: 30px;
            font-size: 20px;
            font-weight: 500;
            color: #ee4d2d;
        }

        #note_anonymous, #xvbxw3636 {
            padding: 5px;
        }

        #input_sdt_name_for_search {
            min-width:300px;
            max-width:100%;
            margin-bottom:5px;
        }

        .sample-address-container {
            box-shadow: 0 1px 1px 0 rgba(0,0,0,.05);
            background: #fff;
            border-radius: 3px;
            display:none;
        }
        .address-name-phone {
            font-weight: 700;
            color: #222;
            margin: 5px;
        }
        .address-address, .address-date {
            margin: 5px;
            word-break: break-word;
        }
    </style>
</head>
<body onload="GetOrder()">

    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        <div>
            <div id="search_order_for_anonymous" style="display:none;">
                <div id="note_anonymous">
                    Không đăng nhập bạn là khách vãng lai, bạn có thể tìm kiếm đơn hàng theo tên hoặc số điện thoại người nhận.
                    Tất nhiên người khác cũng có thể thấy thông tin đơn hàng vãng lai của bạn.
                    Danh sách đơn hàng ban đầu là được lưu trên trình duyệt của bạn
                </div>
                <div id="xvbxw3636">
                    <input id="input_sdt_name_for_search" type="text" value="" title="Nhập tên hoặc vài số cuối SĐT người nhận"
                           placeholder="Nhập tên hoặc vài số cuối SĐT người nhận" />
                    <button onclick="SearchOrderForAnonymous()">Tìm Kiếm</button>
                </div>
            </div>
            <div class="status-container">
                <button type="button" class="nvsflAB87" data-status="10" onclick="ShowResult(this);">Tất cả</button>
                <button type="button" class="nvsflAB87" data-status="0" onclick="ShowResult(this);">Chờ thanh toán</button>
                <button type="button" class="nvsflAB87" data-status="1" onclick="ShowResult(this);">Chuẩn bị hàng</button>
                <button type="button" class="nvsflAB87" data-status="2" onclick="ShowResult(this);">Chờ giao ĐVVC</button>
                <button type="button" class="nvsflAB87" data-status="4" onclick="ShowResult(this);">Chờ giao khách</button>
                <button type="button" class="nvsflAB87" data-status="9" onclick="ShowResult(this);">Hoàn thành</button>
                <button type="button" class="nvsflAB87" data-status="7" onclick="ShowResult(this);">Đã hủy</button>
                <button type="button" class="nvsflAB87" data-status="8" onclick="ShowResult(this);">Trả hàng/Hoàn tiền</button>
            </div>
            <div class="sample-address-container">
                <div class="address-date">09/24/2024</div>
                <div class="address-name-phone">Huệ hoàng (+84) 383519872</div>
                <div class="address-address">Số 24 , Ngõ Việt Hà 2, khu tập thể Việt Hà, tổ dân phố Phú Minh, Phường Cổ Nhuế 2, Quận Bắc Từ Liêm, Hà Nội</div>
            </div>
            <div class="sample-item-container">
                <img class="model-icon" src="~/Media/searchIcon.png" />
                <div class="name-quantity">
                    <div class="ffZM87hf">(Tặng xe đẩy hoặc bàn nhạc) Tã quần/dán Huggies Siêu Cao Cấp Platinum Nature Made M58/L44/XL38/XXL26 NB60/S82/M64/L54/XL</div>
                    <div class="ffZM87hf">Tên Phân Loại</div>
                    <div class="ffZM87hf">x2</div>
                </div>
                <div class="item-money">
                    <div>
                        <span class="j2En5csA">đ280000</span>
                        <span class="ndAKDn90">đ280000</span>
                    </div>
                </div>
            </div>
            <div class="sample-payment">
                <div class="money-title">Tổng tiền hàng</div>
                <div class="money-padding"><sup>₫</sup>156,000</div>
            </div>
            <div class="sample-order">
                <div class="order-header">
                    <div class="fxASnxvd">Hoàn Thành</div>
                </div>
                <div class="order-address-container">

                </div>
                <div class="order-item-container">

                </div>
                <div class="payment-infor-container">

                </div>
            </div>

            <div class="result-container">
                <div class="result-content-container">

                </div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.cart.cookie.js"></script>
    <script src="~/Scripts/web.play.with.me.action.common.js"></script>
    <script>
        // Tham số tìm kiếm
        let status;
        let listOrder = null; // Danh sách tất cả đơn hàng người dùng

        // Hiện tất cả hoặc 1 đơn trên 1 trang, không phân trang nên gọi hàm này ngay khi load trang
        async function GetOrder() {
            const searchParams = new URLSearchParams();
            let query;
            if (GetValueFromUrlName("id") == null) {
                query = "/Customer/GetAllOrder";
            }
            else {
                searchParams.append("id", GetValueFromUrlName("id"));
                query = "/Customer/GetOrderFromId";
            }
            ShowCircleLoader();

            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();
            let resObj = JSON.parse(responseDB.responseText);
            if (resObj.State != 0) {
                await CreateMustClickOkModal("Có lỗi xảy ra. Vui lòng thử lại sau.", null);
                listOrder = null;
                return;
            }
            listOrder = resObj.myJson;

            ShowHideSomethingFirst();

            // Hiển thị đơn hàng
            ShowResult(document.getElementsByClassName("nvsflAB87")[0]);
        }

        async function SearchOrderForAnonymous() {
            let sdtNameForSearch = document.getElementById("input_sdt_name_for_search");
            if (isEmptyOrSpaces(sdtNameForSearch.value)) {
                CreateMustClickOkModal("Thông tin tìm kiếm chưa đúng. Vui lòng nhập tên hoặc vài số cuối SĐT người nhận.", null);
                sdtNameForSearch.value = "";
                sdtNameForSearch.focus();
                return;
            }
            else if (sdtNameForSearch.value.length < 3) {
                CreateMustClickOkModal("Nhập ít nhất 3 ký tự");
                sdtNameForSearch.focus();
                return;
            }

            const searchParams = new URLSearchParams();
            searchParams.append("sdtNameForSearch", sdtNameForSearch.value);
            let query = "/Customer/SearchOrderForAnonymous";
            ShowCircleLoader();

            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();
            let resObj = JSON.parse(responseDB.responseText);
            if (resObj.State != 0) {
                await CreateMustClickOkModal("Có lỗi xảy ra. Vui lòng thử lại sau.", null);
                listOrder = null;
                return;
            }

            listOrder = resObj.myJson;

            // Hiển thị đơn hàng
            ShowResult(document.getElementsByClassName("nvsflAB87")[0]);
        }

        function ShowHideSomethingFirst() {
            if (GetValueFromUrlName("id") != null) {
                document.getElementsByClassName("status-container")[0].remove();
            }
            else {
                if (!CheckAnonymousCustomer()) {
                    document.getElementById("search_order_for_anonymous").remove();
                }
                else {
                    document.getElementById("search_order_for_anonymous").style.display = "initial";
                }
            }
        }

        function GetFormattedDate(date) {
            var year = date.getFullYear();

            var month = (1 + date.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = date.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            return day + '/' + month + '/' + year;
        }

        function ShowResult(ele) {
            let status = parseInt(ele.getAttribute("data-status"));
            if (GetValueFromUrlName("id") == null) {
                // Bỏ màu bottom-border, chữ của button cũ
                let lsBtn = document.getElementsByClassName("nvsflAB87");
                for (let i = 0; i < lsBtn.length; i++) {
                    if (lsBtn[i] != ele) {
                        lsBtn[i].style.color = "initial";
                        lsBtn[i].style.borderBottom = "none";
                    }
                    else {
                        lsBtn[i].style.color = "#ee4d2d";
                        lsBtn[i].style.borderBottom = "2px solid #ee4d2d";
                    }
                }
            }

            // Làm trống
            let container = document.getElementsByClassName("result-content-container")[0];
            container.innerHTML = "";

            // Hiển thị order
            if (listOrder == null) {
                return;
            }

            let sample = document.getElementsByClassName("sample-order")[0];
            let sampleItem = document.getElementsByClassName("sample-item-container")[0];
            let sampleAdress = document.getElementsByClassName("sample-address-container")[0];
            let samplePayment = document.getElementsByClassName("sample-payment")[0];

            let length = listOrder.length;
            // Duyệt từ cuối danh sách để lấy theo thời gian gần nhất hiển thị hàng trên ở web
            for (let i = length - 1; i >= 0; i--) {
                let orderObj = listOrder[i];
                if (status != 10 && orderObj.lsOrderTrack[orderObj.lsOrderTrack.length - 1].status != status)
                    continue;

                let clone = sample.cloneNode(true);
                clone.style.display = "block";
                // Trạng thái đơn
                clone.getElementsByClassName("fxASnxvd")[0].innerHTML =
                    orderObj.lsOrderTrack[orderObj.lsOrderTrack.length - 1].strStatus;

                // Thông tin nhận hàng
                let cloneAddress = sampleAdress.cloneNode(true);
                cloneAddress.style.display = "initial";

                let d = new Date(orderObj.time);
                cloneAddress.getElementsByClassName("address-date")[0].innerHTML = GetFormattedDate(d);

                cloneAddress.getElementsByClassName("address-name-phone")[0].innerHTML =
                    orderObj.address.name + ", " + orderObj.address.phone;

                // Là khách vãng lai
                if (CheckAnonymousCustomer()) {
                    cloneAddress.getElementsByClassName("address-address")[0].innerHTML =
                        orderObj.address.province + ", " + orderObj.address.district + ", ******";
                }
                else {
                    cloneAddress.getElementsByClassName("address-address")[0].innerHTML =
                    orderObj.address.detail + ", " + orderObj.address.province + ", "
                        + orderObj.address.district + ", " + orderObj.address.subdistrict;
                }
                clone.getElementsByClassName("order-address-container")[0].append(cloneAddress);

                let containerItem = clone.getElementsByClassName("order-item-container")[0];
                let containerPayment = clone.getElementsByClassName("payment-infor-container")[0];
                let num = orderObj.lsOrderDetail.length;
                for (let j = 0; j < num; j++) {
                    let itemObj = orderObj.lsOrderDetail[j];
                    let cloneItem = sampleItem.cloneNode(true);
                    cloneItem.style.display = "flex";
                    // Icon
                    cloneItem.getElementsByClassName("model-icon")[0].src = itemObj.imageSrc;

                    // Tên item
                    cloneItem.getElementsByClassName("ffZM87hf")[0].innerHTML = itemObj.itemName;
                    // Tên phân loại
                    cloneItem.getElementsByClassName("ffZM87hf")[1].innerHTML = itemObj.modelName;
                    // Số lượng
                    cloneItem.getElementsByClassName("ffZM87hf")[2].innerHTML = "x" + itemObj.quantity;

                    // Tiền giá bìa
                    cloneItem.getElementsByClassName("j2En5csA")[0].innerHTML =
                        ConvertMoneyToTextWithIcon(itemObj.bookCoverPrice * itemObj.quantity);
                    // Thành tiền
                    cloneItem.getElementsByClassName("ndAKDn90")[0].innerHTML =
                        ConvertMoneyToTextWithIcon(itemObj.price * itemObj.quantity);

                    containerItem.append(cloneItem);
                }

                num = orderObj.lsOrderPay.length;
                for (let j = 0; j < num; j++) {
                    let paymentObj = orderObj.lsOrderPay[j];

                    let clonePayment = samplePayment.cloneNode(true);
                    clonePayment.style.display = "flex";

                    if (paymentObj.type == 10) {
                        clonePayment.getElementsByClassName("money-padding")[0].className = "money-padding money-sum";
                    }

                    clonePayment.getElementsByClassName("money-title")[0].innerHTML = paymentObj.strType;
                    clonePayment.getElementsByClassName("money-padding")[0].innerHTML =
                        ConvertMoneyToTextWithIcon(paymentObj.value);


                    containerPayment.append(clonePayment);

                    // Tính tổng tiền, các loại phí, khuyến mại
                }
                container.append(clone);
            }
        }
    </script>
</body>
</html>
