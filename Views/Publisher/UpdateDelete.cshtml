
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <link rel="stylesheet" href="~/Content/web.play.with.me.table.show.data.css">
</head>
<body>
    <div id="biggestContainer">
        <div id="result-find-id">
            <div>
                <div>
                    <label for="publisher-id">Nhà phát hành:</label>
                    <input class="config-max-width margin-vertical"
                           id="publisher-id" value="@ViewData["publisherName"]">
                </div>

                <label for="publisher-discount" title="Chiết khấu so với giá bìa khi nhập sách.
                   Dùng để tham khảo khi tính giá bán thực tế. Giá trị mặc định là 20">Chiết khấu:</label>
                <input id="publisher-discount" type="number" max="100" min="0" step="0.1" value="@ViewData["publisherDiscount"]" />

                <label for="publisher-detail">Thông tin chi tiết thêm:</label><br>
                <textarea id="publisher-detail" rows="10"
                          class="config-max-width margin-vertical" value="@ViewData["publisherDetail"]">@ViewData["publisherDetail"]</textarea>
            </div>
            <div>
                <button type="button" onclick="UpdatePublisher()" style="margin-right:20px;">Cập Nhật</button>
                <button type="button" onclick="DeletePublisher()">Xóa</button>
            </div>
        </div>
        @Html.Partial("~/Views/Shared/DoesntFindId.cshtml")
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.action.common.js"></script>
    <script>
        // Không tìm thấy đối tượng, hiển thông báo
        function ShowDoesntFindIdPublisher() {
            if (document.getElementById("publisher-id").value == "") {
                document.getElementById("result-find-id").remove();
                let ele = document.getElementById("doesnt-find-id");
                ele.style.display = "flex";
                ele.style.alignItems = "center";
                ele.style.justifyContent = "center";
            }
        }
        ShowDoesntFindIdPublisher();

        async function UpdatePublisher() {
            let publisherName = document.getElementById("publisher-id").value;
            if (CheckIsEmptyOrSpacesAndShowResult(publisherName, "Tên nhà phát hành không hợp lệ.")) {
                document.getElementById("publisher-id").focus();
                return;
            }

            let publisherDetail = document.getElementById("publisher-detail").value;
            const searchParams = new URLSearchParams();
            searchParams.append("id", GetValueFromUrlName("id"));
            searchParams.append("name", CapitalizeWords(publisherName));
            searchParams.append("discount", GetValueInputById("publisher-discount", 20));
            searchParams.append("detail", publisherDetail);
            let query = "/Publisher/UpdatePublisher";

            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Update thành công.", "Có lỗi xảy ra.");
        }

        async function DeletePublisher() {
            let text = "Nếu còn sản phẩm thuộc nhà phát hành này bạn sẽ không thể xóa. Bạn chắc chắn muốn XÓA?";
            if (confirm(text) == false)
                return;

            let publisherId = GetValueFromUrlName("id");
            const searchParams = new URLSearchParams();
            searchParams.append("id", publisherId);
            let query = "/Publisher/DeletePublisher";

            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Xóa thành công.", "Có lỗi xảy ra.");
        }
    </script>
</body>
</html>
