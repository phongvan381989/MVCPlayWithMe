@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <style>
        .fmx09gx8 {
            background-color: white;
            padding: 10px;
            margin: 10px 0px 10px 0px;
            border-radius: 2px;
            display: flex;
            flex-wrap: wrap;
        }
        .xvsfx02xv {
            background-color: #ffb500;
            padding: 10px;
            margin: 10px 0px 10px 0px;
            border-radius: 5px;
        }

        .gmxk9381 {
            margin: 10px 5px 10px 5px;
            width: 100%;
        }

        button {
            padding: 10px;
            margin: 10px 10px 10px 10px;
            border-radius: 5px;
        }
        .flpzni5136{
            margin-bottom:15px;
        }
    </style>
</head>
<body>
    <div id="biggestContainer">
        <div class="fmx09gx8">
            <div class="gmxk9381"> Sản phẩm trong kho</div>
            <button type="button" onclick="CopyShopeeProductImageToProduct()"
                    title="Sản phẩm trong kho chưa có ảnh, video.
                    Copy ảnh sản phẩm trên sàn Shopee tới sản phẩm trong kho">
                Chép Ảnh Từ Shopee Tới Sản Phẩm Trong Kho
            </button>

            <button type="button" onclick="AddWaterMark()" disabled
                    title="Thêm waterMark logo voi bé nhỏ vào giữa ảnh cho tất cả anh trong thư mục.
                    Cân nhắc khi dùng hàm này">
                Thêm Water mark logo voi bé nhỏ tất cả ảnh
            </button>

            <button type="button" onclick="DeleteDuplicateDataOftbShopeeModel()" disabled
                    title="Xóa dữ liệu trùng lặp ở bảng tbShopeeModel.
                    Nhiều dữ liệu của sản phẩm có TMDTShopeeModelId = -1 đang bị trùng lặp
                    Cân Nhắc khi dùng hàm này">
                Xóa dữ liệu trùng lặp ở bảng tbShopeeModel
            </button>
        </div>

        <div class="fmx09gx8">
            <div class="gmxk9381"> SHOPEE</div>
            <button type="button" onclick="ShopeeSaveImageSourceOfItemAndModel()" disabled
                    title="Lấy url ảnh đại diện của item, model shopee cập nhật vào db đối với item, model chưa có image url.">
                Lấy URL ảnh Item, model lưu vào db
            </button>
        </div>

        <div class="fmx09gx8">
            <div class="gmxk9381"> TIKI</div>
            <button type="button" onclick="TikiSaveImageSourceOfItemAndModel()" disabled
                    title="Lấy url ảnh đại diện của item tiki cập nhật vào db đối với item chưa có image url.">
                Lấy URL ảnh Item lưu vào db
            </button>

            <button type="button" onclick="TikiTestPullEvent()"
                    title="Test chức năng lấy event đơn hàng từ queue đã đang ký.">
                Test lấy event đơn hàng
            </button>
        </div>

        <div class="xvsfx02xv">
            <div class="gmxk9381"> Ủy quyền SHOPEE</div>
            <div class="flpzni5136">
                <input type="text" id="live_partner_key" class="config-max-width margin-vertical"
                       title="Live Partner Key của shop, lấy từ open shopee platform. Chỉ thay đổi khi làm mới Live Partner Key" />
                <button type="button" onclick="ShopeeSaveLivePartnerKey()"
                        title="Cập nhật Live Partner Key từ input trên">
                    Cập Nhật Live Partner Key
                </button>
            </div>

            <div class="flpzni5136">
                <input type="text" id="authorization_url" class="config-max-width margin-vertical"
                       title="URL gửi chủ shop server trả về sau khi click button ngay dưới" />
                <button type="button" onclick="ShopeeGetAuthorizationURL()"
                        title="Lấy được url gửi chủ shop, chủ shop vào url xác thực ủy quyền phần mềm. Hiển thị ở input ngay trên">
                    Sinh URL Ủy Quyền
                </button>
            </div>

            <div class="flpzni5136">
                <input type="text" id="code" class="config-max-width margin-vertical"
                       title="Code của shope nhận được sau khi chủ shop ủy quyền. Chỉ thay đổi khi làm mới ủy quyền" />
                <button type="button" onclick="ShopeeSaveCode()"
                        title="Cập nhật code từ input trên">
                    Cập Nhật Code
                </button>
            </div>

            <button type="button" onclick="ShopeeGetTokenShopLevelAfterAuthorization()"
                    title="Lấy được và lưu refresh, access token ngay sau khi chủ shop ủy quyền.
                    DB đã có live partner key, code">
                Lấy Và Lưu Refresh Access Token Ngay Sau Ủy Quyền
            </button>

        </div>
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.action.common.js"></script>
    <script>
        function CopyShopeeProductImageToProduct() {

        }

        async function ShopeeSaveImageSourceOfItemAndModel() {
            const searchParams = new URLSearchParams();
            let query = "/Dev/ShopeeSaveImageSourceOfItemAndModel";
            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Lấy ảnh thành công", "Lấy ảnh có lỗi");
        }

        async function TikiSaveImageSourceOfItemAndModel() {
            const searchParams = new URLSearchParams();
            let query = "/Dev/TikiSaveImageSourceOfItemAndModel";
            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Lấy ảnh thành công", "Lấy ảnh có lỗi");
        }

        // TikiTestPullEvent
        async function TikiTestPullEvent() {
            const searchParams = new URLSearchParams();
            let query = "/Dev/TikiTestPullEvent";
            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Lấy ảnh thành công", "Lấy ảnh có lỗi");
        }

        async function AddWaterMark() {
            //const searchParams = new URLSearchParams();
            //let query = "/Dev/AddWaterMarkAllExistImage";
            //ShowCircleLoader();
            //let responseDB = await RequestHttpPostPromise(searchParams, query);
            //RemoveCircleLoader();
            //let result = JSON.parse(responseDB.responseText);

            //if (result.State != 0) {
            //    await CreateMustClickOkModal(result.Message)
            //    return;
            //}
            //alert("Thêm logo voi bé nhỏ thành công.");
        }

        async function DeleteDuplicateDataOftbShopeeModel() {
            //const searchParams = new URLSearchParams();
            //let query = "/Dev/DeleteDuplicateDataOftbShopeeModel";
            //ShowCircleLoader();
            //let responseDB = await RequestHttpPostPromise(searchParams, query);
            //RemoveCircleLoader();
            //let result = JSON.parse(responseDB.responseText);

            //if (result.State != 0) {
            //    await CreateMustClickOkModal(result.Message)
            //    return;
            //}
            //alert("Thêm logo voi bé nhỏ thành công.");
        }

        async function ShopeeGetAuthorizationURL() {
            const searchParams = new URLSearchParams();
            let query = "/Dev/ShopeeGetAuthorizationURL";
            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();
            let result = JSON.parse(responseDB.responseText);

            if (result.State != 0) {
                CreateMustClickOkModal(result.Message)
                return;
            }
            else {
                document.getElementById("authorization_url").value = result.Message;
            }
        }

        async function ShopeeSaveLivePartnerKey() {
            let livePartnerKey = document.getElementById("live_partner_key").value;
            if (CheckIsEmptyOrSpacesAndShowResult(livePartnerKey, "key không hợp lệ.")) {
                document.getElementById("live_partner_key").focus();
                return;
            }
            const searchParams = new URLSearchParams();
            searchParams.append("key", livePartnerKey);
            let query = "/Dev/ShopeeSaveLivePartnerKey";

            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Cập nhật thành công.", "Có lỗi xảy ra.");
        }

        async function ShopeeSaveCode() {
            let livePartnerKey = document.getElementById("code").value;
            if (CheckIsEmptyOrSpacesAndShowResult(livePartnerKey, "code không hợp lệ.")) {
                document.getElementById("code").focus();
                return;
            }
            const searchParams = new URLSearchParams();
            searchParams.append("code", livePartnerKey);
            let query = "/Dev/ShopeeSaveCode";

            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Cập nhật thành công.", "Có lỗi xảy ra.");
        }

        async function ShopeeGetTokenShopLevelAfterAuthorization() {
            let text = "Bạn vừa được chủ shop ủy quyền?";
            if (confirm(text) == false)
                return;

            const searchParams = new URLSearchParams();
            let query = "/Dev/ShopeeGetTokenShopLevelAfterAuthorization";
            ShowCircleLoader();
            let responseDB = await RequestHttpPostPromise(searchParams, query);
            RemoveCircleLoader();

            CheckStatusResponseAndShowPrompt(responseDB.responseText, "Thành công.", "Có lỗi xảy ra.");
        }
    </script>
</body>
</html>
