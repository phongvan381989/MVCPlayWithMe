@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <link rel="stylesheet" href="~/Content/web.play.with.me.table.show.data.css">
    <link rel="stylesheet" href="~/Content/web.play.with.me.modal.common.css">
</head>
<body>
    
    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        <div class="config-max-width padding-container">
            @Html.Partial("~/Views/Shared/ItemModel/ItemModelInputCommon.cshtml")

            <button type="button" onclick="AddItemModel()">Thêm mới</button>
            @Html.Partial("~/Views/Shared/ItemModel/Mapping.cshtml")
            <p id="result-insert"></p>

        </div>
    </div>
    <script>
        // Get the modal
        var modal = document.getElementById("myModal");

        // Get the button that opens the modal
        var btn = document.getElementById("myBtn");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
            EmptyModal();
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
                EmptyModal();
            }
        }

        function EmptyModal() {
            document.getElementById("code-or-isbn").value = "";
            document.getElementById("product-name-id").value = "";
            document.getElementById("combo-id").value = "";

            // Làm trống bảng
            DeleteRowsExcludeHead("myTable");
            DeleteRowsExcludeHead("myTableMapping");
        }

        // pro là sản phẩm được chọn mapping từ bảng kết quả tìm kiếm
        function AddRowsToTableMapping(pro) {
            if (pro == null)
                return;
            if (DEBUG) {
                console.log(pro);
            }
            var table = document.getElementById("myTableMapping");
            var row = table.insertRow(-1);

            // Insert new cells (<td> elements)
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            var cell4 = row.insertCell(3);

            // Id
            cell1.innerHTML = pro.id;
            cell1.style.display = "none";

            // Image
            var img = document.createElement("img");
            img.setAttribute("src", pro.imageSrc[0]);
            img.height = thumbnailHeight;
            img.width = thumbnailWidth;
            cell2.append(img);

            // Tên
            cell3.innerHTML = pro.name;

            // Nút xóa
            var btn = document.createElement("button");
            btn.onclick = function () {
                this.parentElement.parentElement.remove();
            };
            btn.innerHTML = "Xóa";
            cell4.appendChild(btn)
        }

        // pro là sản phẩm được chọn mapping từ bảng kết quả tìm kiếm
        function DeleteRowsFromTableMapping(pro) {
            if (pro == null)
                return;

            var rows = document.getElementById("myTableMapping").rows;
            let length = rows.length;
            for (let i = 0; i < length; i++) {
                if (Number(rows[i].cells[0].innerHTML) == pro.id) {
                    // Xóa row này
                    document.getElementById("myTableMapping").deleteRow(i);
                }
            }
        }

        function FindProductFromList(listProduct, id) {
            let length = listProduct.length;
            for (let i = 0; i < length; i++) {
                if (listProduct[i].id == id) {
                    return listProduct[i];
                }
            }
        }

        async function Search() {
            let codeOrBarcode = document.getElementById("code-or-isbn").value;
            let name = document.getElementById("product-name-id").value;
            let combo = document.getElementById("combo-id").value;
            const searchParams = new URLSearchParams();
            searchParams.append("codeOrBarcode", codeOrBarcode);
            searchParams.append("name", name);
            searchParams.append("combo", combo);

            let url = "/ItemModel/SearchProduct";
            let resObj = await RequestHttpGetPromise(searchParams, url);
            if (DEBUG) {
                console.log("responseText: " + resObj.responseText);
            }
            let listProduct = JSON.parse(resObj.responseText);
            if (DEBUG) {
                console.log(listProduct);
            }

            // Làm trống bảng
            DeleteRowsExcludeHead("myTable");

            // Show
            var table = document.getElementById("myTable");
            let length = listProduct.length;
            for (let i = 0; i < length; i++) {
                let pro = listProduct[i];
                var row = table.insertRow(-1);

                // Insert new cells (<td> elements)
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
                var cell4 = row.insertCell(3);

                // Id
                cell1.innerHTML = pro.id;
                cell1.style.display = "none";

                // Checkbox
                var checkbox = document.createElement("INPUT");
                checkbox.setAttribute("type", "checkbox");
                checkbox.onclick = function () {
                    // Lấy id
                    let id = Number(this.parentElement.previousSibling.innerHTML);
                    let pro = FindProductFromList(listProduct, id);
                    if (this.checked == true) {
                        AddRowsToTableMapping(pro);
                    }
                    else {
                        DeleteRowsFromTableMapping(pro);
                    }
                }
                cell2.appendChild(checkbox)

                // Image
                var img = document.createElement("img");
                img.setAttribute("src", pro.imageSrc[0]);
                img.height = thumbnailHeight;
                img.width = thumbnailWidth;
                cell3.append(img);

                // Tên
                cell4.innerHTML = pro.name;
            }
        }

        function SaveMapping() {

        }
    </script>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.image.video.common.js"></script>
    <script src="~/Scripts/web.play.with.me.item.model.js"></script>
</body>
</html>

