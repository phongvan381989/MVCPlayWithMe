@*@model IEnumerable<MVCPlayWithMe.Models.Item>*@
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/Head.cshtml")
    <link rel="stylesheet" href="~/Content/web.play.with.me.modal.common.css">
    <style>
        img, video {
            max-width: 100%;
            max-height: 100%;
            /*display: block;
            margin: auto;*/
        }

        #item-media-wrapper, #item-something-wrapper {
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            width: 100%;
        }

        #item-medium-media {
            /*display: flex;*/
            /*position:relative;*/
            justify-content: center;
            align-items: center;
            display: block;
            /*width: 100%;*/
            margin-left: auto;
            margin-right: auto;
            margin-top: auto;
            margin-bottom: auto;
            padding: 5px;
            /*height: 800px;*/
            /*border: 1px solid rgb(255, 0, 0);*/
        }
        /*#item-small-media {
            display: flex;
            width: 100%;
            height: 120px;
        }*/

        #item-small-media-container {
            display: flex;
            width: 100%;
            padding: 5px;
            height: 120px;
            /*border: 1px solid rgb(255, 0, 0);*/
        }

        #item-variation-container, #item-order {
            display: flex;
            width: 100%;
            padding: 5px;
            flex-wrap: wrap;
            /*border: 1px solid rgb(255, 0, 0);*/
        }
        /*#item-something-wrapper{
            height: 1000px;
        }*/
        .small-media {
            display: flex;
            margin: 4px 5px 4px 5px;
            border: 1px solid rgb(228, 228, 222);
            width: 100px;
            height: 100px;
            /**/
            /*justify-content: center;*/
            /*align-items: center;*/
            /*padding: 1px;*/
        }

            .small-media:hover {
                /*border: 1px solid rgb(255, 0, 0);*/
                cursor: pointer;
            }

        .right-left-arrow:hover {
            cursor: pointer;
        }

        h1 {
            display: block;
            font-size: 1em;
            margin-top: 0.2em;
            margin-bottom: 0.2em;
            margin-left: 10px;
            margin-right: 10px;
            font-weight: normal;
        }

        #item-price {
            display: flex;
            align-content: center;
            flex-wrap: wrap;
            width: 100%;
            /*flex-basis: 625px;*/
            min-height: 1.875rem;
        }

        .items-center {
            display: flex;
            align-items: center;
        }

        #book-cover-price {
            font-size: 0.8rem;
            text-decoration: line-through;
            color: #929292;
            margin-left: 10px;
            margin-right: 10px;
            display: flex;
            align-items: center;
            /*margin-right: 10px;*/
            /*text-align:center;*/
        }

        #price {
            font-size: 1.2rem;
            font-weight: 500;
            color: #ee4d2d;
        }

        #discount {
            margin-left: 15px;
            font-size: .75rem;
            color: #fff;
            text-transform: uppercase;
            background: #ee4d2d;
            border-radius: 2px;
            padding: 2px 4px;
            font-weight: 600;
            line-height: 1;
            white-space: nowrap;
        }

        .variation-button {
            overflow: visible;
            cursor: pointer;
            min-width: 5rem;
            min-height: 2.5rem;
            box-sizing: border-box;
            padding: 0.5rem;
            padding-left: 2.5rem;
            margin: 8px 8px 0 0;
            color: rgba(0,0,0,.8);
            text-align: left;
            border-radius: 2px;
            border: 1px solid rgba(0,0,0,.09);
            position: relative;
            background: #fff;
            outline: 0;
            word-break: break-word;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        /*.variation-button:hover {
            border: 1px solid rgb(255, 0, 0);
        }*/
        .variation-image {
            width: 1.5rem;
            height: 1.5rem;
            position: absolute;
            left: 0.5rem;
            top: 50%;
            transform: translateY(-50%);
        }

        #check-container {
            position: absolute;
            display: block;
            width: 0.9375rem;
            height: 0.9375rem;
            overflow: hidden;
            right: 0;
            bottom: 0;
        }

            #check-container::before {
                border: 0.9375rem solid transparent;
                border-bottom: 0.9375rem solid rgb(255, 0, 0);
                content: "";
                position: absolute;
                right: -0.9375rem;
                bottom: 0;
            }

        .icon-tick-bold {
            color: #fff;
            font-size: 8px;
            position: absolute;
            right: 0;
            bottom: 0;
            display: inline-block;
            width: 1em;
            height: 1em;
            fill: currentColor;
        }

        .flex-items-center {
            display: flex;
            align-items: center;
            flex-wrap: wrap;
        }

        .shopee-input-quantity {
            background: #fff;
            display: flex;
            align-items: center;
        }

        .xNxl-t {
            outline: none;
            /*cursor: pointer;
            border: 0;
            font-size: .875rem;*/
            font-weight: 300;
            line-height: 1;
            letter-spacing: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color .1s cubic-bezier(.4,0,.6,1);
            border: 1px solid rgba(0,0,0,.09);
            border-radius: 2px;
            background: transparent;
            color: rgba(0,0,0,.8);
            width: 32px;
            height: 32px;
            font-size: 10px;
            flex-shrink: 0;
        }
        /*.xNxl-t:first-child {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }*/

        .shopee-svg-icon {
            font-size: 10px;
            width: 10px;
            height: 10px;
            flex-shrink: 0
        }

        .VWjjde {
            width: 50px;
            height: 32px;
            border-left: 0;
            border-right: 0;
            font-size: 16px;
            font-weight: 400;
            box-sizing: border-box;
            text-align: center;
            cursor: text;
            border-radius: 0;
            -webkit-appearance: none;
            outline: none;
            line-height: 1;
            letter-spacing: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color .1s cubic-bezier(.4,0,.6,1);
            border: 1px solid rgba(0,0,0,.09);
            background: transparent;
            color: rgba(0,0,0,.8);
        }

        .I-H1Co {
            /*margin: 15px 0 0 110px;*/
            padding: 5px;
            color: #ff424f;
            display: none;
            /*border: 1px solid #73AD21;*/
        }

        .p-UZsF {
            padding: 5px;
            display: flex;
            /*padding-left: 0.9375rem;*/
            /*border: 1px solid #73AD21;*/
        }

        .psinpachgwl90 {
            padding: 5px;
            display: none;
        }

        .btn-add-to-cart {
            position: relative;
            overflow: visible;
            outline: 0;
            background: rgba(208,1,27,.08);
            color: #d0011b;
            border: 1px solid #d0011b;
            box-shadow: 0 1px 1px 0 rgba(0,0,0,.03);
            height: 48px;
            padding: 0 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-transform: capitalize;
            flex-direction: row;
            cursor: pointer;
            margin-right: 0.9375rem;
            min-width: 8.25rem;
        }

            .btn-add-to-cart:hover {
                background: rgba(208,1,27,.05);
            }

        .btn-buy-now {
            position: relative;
            overflow: visible;
            outline: 0;
            background: #d0011b;
            color: #fff;
            height: 48px;
            padding: 0 20px;
            text-overflow: ellipsis;
            flex-direction: column;
            box-sizing: border-box;
            box-shadow: 0 1px 1px 0 rgba(0,0,0,.09);
            border-radius: 2px;
            border: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            text-transform: capitalize;
            max-width: 250px;
            margin-right: 0.9375rem;
            min-width: 8.25rem;
            /*font-size: .875rem;*/
        }

            .btn-buy-now:hover {
                background: #ff424f;
            }

        .icon-add-to-cart {
            display: inline-block;
            width: 1em;
            height: 1em;
            fill: currentColor;
            position: relative;
            margin-right: 10px;
            color: #ee4d2d;
            stroke: #ee4d2d;
            font-size: 1.25rem;
        }

        .product-detail {
            box-shadow: 0 1px 1px 0 rgba(0,0,0,.05);
            border-radius: 0.125rem;
            overflow: hidden;
            background: #fff;
            margin-top: 0.9375rem;
            padding-top: 0.625rem;
            display: block;
        }

        .U9rGd1 {
            /*padding: 0.9375rem 0.9375rem 0;*/
            display: block;
        }

        .Iv7FJp {
            background: rgba(0,0,0,.02);
            color: rgba(0,0,0,.87);
            font-size: 1.125rem;
            font-weight: 400;
            margin: 0;
            padding: 0.875rem;
            text-transform: capitalize;
            display: block;
            /*font-size: 1.5em;*/
            /*margin-block-start: 0.83em;
            margin-block-end: 0.83em;
            margin-inline-start: 0px;
            margin-inline-end: 0px;*/
            /*font-weight: bold;*/
        }

        h2 {
            display: block;
            /*font-size: 1.5em;
            margin-block-start: 0.83em;
            margin-block-end: 0.83em;
            margin-inline-start: 0px;
            margin-inline-end: 0px;
            font-weight: bold;*/
        }

        .MCCLkq {
            margin: 0rem 0.9375rem 0.9375rem;
            display: block;
        }

        .dR8kXc {
            display: flex;
            margin-bottom: 0.75rem;
        }

        .zquA4o {
            color: rgba(0,0,0,.4);
            font-size: .875rem;
            box-sizing: border-box;
            width: 8.75rem;
            padding-right: 0.75rem;
        }

        .GvvZVe {
            color: #05a;
        }

        .f7AU53 {
            white-space: pre-wrap;
            color: rgba(0,0,0,.8);
            font-size: 1rem;
            overflow: hidden;
            text-overflow: ellipsis;
            line-height: 1.7;
            display: block;
            padding: 0px;
        }

        .irIKAp {
            margin: 0;
        }

        .shopee-svg-icon-sfxb {
            height: 30px;
            width: 97px;
            fill: #fff;
            background-color: #ee4d2d;
        }
    </style>
</head>
<body onload="HomePageShowItem()">
    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        <div id="item-media-wrapper">
            <div id="item-medium-media">
                <img id="medium-image" style="display:none; object-fit:contain; object-position:center; width:100%; height:100%;" alt="No Image" />
                <video id="medium-video" style="display:none; object-fit:contain; object-position:center; width:100%; height:100%;" controls autoplay
                       muted="muted"></video>
            </div>
            <div id="item-small-media">
                <div id="item-small-media-container">

                </div>
            </div>
        </div>
        <div id="item-something-wrapper">
            <div id="item-name" style="width:100%">
                <h1 id="item-name-h1"></h1>
            </div>
            <div id="item-vote">

            </div>
            <div id="item-price">
                <div id="book-cover-price"><sup>₫</sup>117.000</div>
                <div class="items-center">
                    <div id="price"><sup>₫</sup>87.750</div>
                    <div id="discount">25% giảm</div>
                </div>
            </div>
            <div class="_7VDqtl">
                <div id="item-variation-container">

                </div>

                <div id="item-order">
                    <div class="flex-items-center">
                        <div style="margin-right: 15px;">
                            <div class="shopee-input-quantity">
                                <button type="button" class="xNxl-t" onclick="Decrease()">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns: xlink="http://www.w3.org/1999/xlink" version="1.1" viewBox="0 0 10 10" x="0" y="0" class="shopee-svg-icon"><polygon points="4.5 4.5 3.5 4.5 0 4.5 0 5.5 3.5 5.5 4.5 5.5 10 5.5 10 4.5"></polygon></svg>
                                </button>
                                <input class="VWjjde" type="text" value="1" id="quantity-input"
                                       oninput="ValidateInput(event)">
                                <button type="button" class="xNxl-t" onclick="Increase()">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns: xlink="http://www.w3.org/1999/xlink" version="1.1" viewBox="0 0 10 10" x="0" y="0" class="shopee-svg-icon"><polygon points="10 4.5 5.5 4.5 5.5 0 4.5 0 4.5 4.5 0 4.5 0 5.5 4.5 5.5 4.5 10 5.5 10 5.5 5.5 10 5.5"></polygon></svg>
                                </button>
                            </div>
                        </div>
                        <div id="max-quatity">4992 sản phẩm có sẵn</div>
                    </div>
                </div>

                <div class="I-H1Co">Số lượng bạn chọn đã đạt mức tối đa của sản phẩm này</div>
            </div>
            <div class="p-UZsF">
                <button type="button" class="btn-add-to-cart" onclick="AddToCart()">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns: xlink="http://www.w3.org/1999/xlink" version="1.1"
                         viewBox="0 0 15 15" x="0" y="0" class="icon-add-to-cart">
                        <g>
                            <g>
                                <polyline fill="none" points=".5 .5 2.7 .5 5.2 11 12.4 11 14.5 3.5 3.7 3.5" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10">
                                </polyline>
                                <circle cx="6" cy="13.5" r="1" stroke="none">
                                </circle>
                                <circle cx="11.5" cy="13.5" r="1" stroke="none">
                                </circle>
                            </g>
                            <line fill="none" stroke-linecap="round" stroke-miterlimit="10" x1="7.5" x2="10.5" y1="7" y2="7">
                            </line>
                            <line fill="none" stroke-linecap="round" stroke-miterlimit="10" x1="9" x2="9" y1="8.5" y2="5.5">
                            </line>
                        </g>
                    </svg>
                    <span>thêm vào giỏ hàng</span>
                </button>
                <button type="button" class="btn-buy-now" onclick="BuyNow()">
                    Mua ngay
                </button>
            </div>
            <div class="psinpachgwl90" title="Mua sản phẩm trên Shopee">
                <a href="/" class="fcak09va86" target="_blank">
                    <div>
                        <svg viewBox="0 0 192 65" class="shopee-svg-icon-sfxb">
                            <g>
                                <path d="M35.6717403 44.953764c-.3333497 2.7510509-2.0003116 4.9543414-4.5823845 6.0575984-1.4379707.6145919-3.36871.9463856-4.896954.8421628-2.3840266-.0911143-4.6237865-.6708937-6.6883352-1.7307424-.7375522-.3788551-1.8370513-1.1352759-2.6813095-1.8437757-.213839-.1790053-.239235-.2937577-.0977428-.4944671.0764015-.1151823.2172535-.3229831.5286218-.7791994.45158-.6616533.5079208-.7446018.5587128-.8221779.14448-.2217688.3792333-.2411091.6107855-.0588804.0243289.0189105.0243289.0189105.0426824.0333083.0379873.0294402.0379873.0294402.1276204.0990653.0907002.0706996.14448.1123887.166248.1287205 2.2265285 1.7438508 4.8196989 2.7495466 7.4376251 2.8501162 3.6423042-.0496401 6.2615109-1.6873341 6.7308041-4.2020035.5160305-2.7675977-1.6565047-5.1582742-5.9070334-6.4908212-1.329344-.4166762-4.6895175-1.7616869-5.3090528-2.1250697-2.9094471-1.7071043-4.2697358-3.9430584-4.0763845-6.7048539.296216-3.8283059 3.8501677-6.6835796 8.340785-6.702705 2.0082079-.004083 4.0121475.4132378 5.937338 1.2244562.6816382.2873109 1.8987274.9496089 2.3189359 1.2633517.2420093.1777159.2898136.384872.1510957.60836-.0774686.12958-.2055158.3350171-.4754821.7632974l-.0029878.0047276c-.3553311.5640922-.3664286.5817134-.447952.7136572-.140852.2144625-.3064598.2344475-.5604202.0732783-2.0600669-1.3839063-4.3437898-2.0801572-6.8554368-2.130442-3.126914.061889-5.4706057 1.9228561-5.6246892 4.4579402-.0409751 2.2896772 1.676352 3.9613243 5.3858811 5.2358503 7.529819 2.4196871 10.4113092 5.25648 9.869029 9.7292478M26.3725216 5.42669372c4.9022893 0 8.8982174 4.65220288 9.0851664 10.47578358H17.2875686c.186949-5.8235807 4.1828771-10.47578358 9.084953-10.47578358m25.370857 11.57065968c0-.6047069-.4870064-1.0948761-1.0875481-1.0948761h-11.77736c-.28896-7.68927544-5.7774923-13.82058185-12.5059489-13.82058185-6.7282432 0-12.2167755 6.13130641-12.5057355 13.82058185l-11.79421958.0002149c-.59136492.0107446-1.06748731.4968309-1.06748731 1.0946612 0 .0285807.00106706.0569465.00320118.0848825H.99995732l1.6812605 37.0613963c.00021341.1031483.00405483.2071562.01173767.3118087.00170729.0236381.003628.0470614.00554871.0704847l.00362801.0782207.00405483.004083c.25545428 2.5789222 2.12707837 4.6560709 4.67201764 4.7519129l.00576212.0055872h37.4122078c.0177132.0002149.0354264.0004298.0531396.0004298.0177132 0 .0354264-.0002149.0531396-.0004298h.0796027l.0017073-.0015043c2.589329-.0706995 4.6867431-2.1768587 4.9082648-4.787585l.0012805-.0012893.0017073-.0350275c.0021341-.0275062.0040548-.0547975.0057621-.0823037.0040548-.065757.0068292-.1312992.0078963-.1964115l1.8344904-37.207738h-.0012805c.001067-.0186956.0014939-.0376062.0014939-.0565167M176.465457 41.1518926c.720839-2.3512494 2.900423-3.9186779 5.443734-3.9186779 2.427686 0 4.739107 1.6486899 5.537598 3.9141989l.054826.1556978h-11.082664l.046506-.1512188zm13.50267 3.4063683c.014933.0006399.014933.0006399.036906.0008531.021973-.0002132.021973-.0002132.044372-.0008531.53055-.0243144.950595-.4766911.950595-1.0271786 0-.0266606-.000853-.0496953-.00256-.0865936.000427-.0068251.000427-.020262.000427-.0635588 0-5.1926268-4.070748-9.4007319-9.09145-9.4007319-5.020488 0-9.091235 4.2081051-9.091235 9.4007319 0 .3871116.022399.7731567.067838 1.1568557l.00256.0204753.01408.1013102c.250022 1.8683731 1.047233 3.5831812 2.306302 4.9708108-.00064-.0006399.00064.0006399.007253.0078915 1.396026 1.536289 3.291455 2.5833031 5.393601 2.9748936l.02752.0053321v-.0027727l.13653.0228215c.070186.0119439.144211.0236746.243409.039031 2.766879.332724 5.221231-.0661182 7.299484-1.1127057.511777-.2578611.971928-.5423827 1.37064-.8429007.128211-.0968312.243622-.1904632.34346-.2781231.051412-.0452164.092372-.083181.114131-.1051493.468898-.4830897.498124-.6543572.215249-1.0954297-.31146-.4956734-.586228-.9179769-.821744-1.2675504-.082345-.1224254-.154023-.2267215-.214396-.3133151-.033279-.0475624-.033279-.0475624-.054399-.0776356-.008319-.0117306-.008319-.0117306-.013866-.0191956l-.00256-.0038391c-.256208-.3188605-.431565-.3480805-.715933-.0970445-.030292.0268739-.131624.1051493-.14997.1245582-1.999321 1.775381-4.729508 2.3465571-7.455854 1.7760208-.507724-.1362888-.982595-.3094759-1.419919-.5184948-1.708127-.8565509-2.918343-2.3826022-3.267563-4.1490253l-.02752-.1394881h13.754612zM154.831964 41.1518926c.720831-2.3512494 2.900389-3.9186779 5.44367-3.9186779 2.427657 0 4.739052 1.6486899 5.537747 3.9141989l.054612.1556978h-11.082534l.046505-.1512188zm13.502512 3.4063683c.015146.0006399.015146.0006399.037118.0008531.02176-.0002132.02176-.0002132.044159-.0008531.530543-.0243144.950584-.4766911.950584-1.0271786 0-.0266606-.000854-.0496953-.00256-.0865936.000426-.0068251.000426-.020262.000426-.0635588 0-5.1926268-4.070699-9.4007319-9.091342-9.4007319-5.020217 0-9.091343 4.2081051-9.091343 9.4007319 0 .3871116.022826.7731567.068051 1.1568557l.00256.0204753.01408.1013102c.250019 1.8683731 1.04722 3.5831812 2.306274 4.9708108-.00064-.0006399.00064.0006399.007254.0078915 1.396009 1.536289 3.291417 2.5833031 5.393538 2.9748936l.027519.0053321v-.0027727l.136529.0228215c.070184.0119439.144209.0236746.243619.039031 2.766847.332724 5.22117-.0661182 7.299185-1.1127057.511771-.2578611.971917-.5423827 1.370624-.8429007.128209-.0968312.243619-.1904632.343456-.2781231.051412-.0452164.09237-.083181.11413-.1051493.468892-.4830897.498118-.6543572.215246-1.0954297-.311457-.4956734-.586221-.9179769-.821734-1.2675504-.082344-.1224254-.154022-.2267215-.21418-.3133151-.033492-.0475624-.033492-.0475624-.054612-.0776356-.008319-.0117306-.008319-.0117306-.013866-.0191956l-.002346-.0038391c-.256419-.3188605-.431774-.3480805-.716138-.0970445-.030292.0268739-.131623.1051493-.149969.1245582-1.999084 1.775381-4.729452 2.3465571-7.455767 1.7760208-.507717-.1362888-.982582-.3094759-1.419902-.5184948-1.708107-.8565509-2.918095-2.3826022-3.267311-4.1490253l-.027733-.1394881h13.754451zM138.32144123 49.7357905c-3.38129629 0-6.14681004-2.6808521-6.23169343-6.04042014v-.31621743c.08401943-3.35418649 2.85039714-6.03546919 6.23169343-6.03546919 3.44242097 0 6.23320537 2.7740599 6.23320537 6.1960534 0 3.42199346-2.7907844 6.19605336-6.23320537 6.19605336m.00172791-15.67913203c-2.21776751 0-4.33682838.7553485-6.03989586 2.140764l-.19352548.1573553V34.6208558c0-.4623792-.0993546-.56419733-.56740117-.56419733h-2.17651376c-.47409424 0-.56761716.09428403-.56761716.56419733v27.6400724c0 .4539841.10583425.5641973.56761716.5641973h2.17651376c.46351081 0 .56740117-.1078454.56740117-.5641973V50.734168l.19352548.1573553c1.70328347 1.3856307 3.82234434 2.1409792 6.03989586 2.1409792 5.27140956 0 9.54473746-4.2479474 9.54473746-9.48802964 0-5.239867-4.2733279-9.48781439-9.54473746-9.48781439M115.907646 49.5240292c-3.449458 0-6.245805-2.7496948-6.245805-6.1425854 0-3.3928907 2.79656-6.1427988 6.245805-6.1427988 3.448821 0 6.24538 2.7499081 6.24538 6.1427988 0 3.3926772-2.796346 6.1425854-6.24538 6.1425854m.001914-15.5438312c-5.28187 0-9.563025 4.2112903-9.563025 9.4059406 0 5.1944369 4.281155 9.4059406 9.563025 9.4059406 5.281657 0 9.562387-4.2115037 9.562387-9.4059406 0-5.1946503-4.280517-9.4059406-9.562387-9.4059406M94.5919049 34.1890939c-1.9281307 0-3.7938902.6198995-5.3417715 1.7656047l-.188189.1393105V23.2574169c0-.4254677-.1395825-.5643476-.5649971-.5643476h-2.2782698c-.4600414 0-.5652122.1100273-.5652122.5643476v29.2834155c0 .443339.1135587.5647782.5652122.5647782h2.2782698c.4226187 0 .5649971-.1457701.5649971-.5647782v-9.5648406c.023658-3.011002 2.4931278-5.4412923 5.5299605-5.4412923 3.0445753 0 5.516841 2.4421328 5.5297454 5.4630394v9.5430935c0 .4844647.0806524.5645628.5652122.5645628h2.2726775c.481764 0 .565212-.0824666.565212-.5645628v-9.5710848c-.018066-4.8280677-4.0440197-8.7806537-8.9328471-8.7806537M62.8459442 47.7938061l-.0053397.0081519c-.3248668.4921188-.4609221.6991347-.5369593.8179812-.2560916.3812097-.224267.551113.1668119.8816949.91266.7358184 2.0858968 1.508535 2.8774525 1.8955369 2.2023021 1.076912 4.5810275 1.646045 7.1017886 1.6975309 1.6283921.0821628 3.6734936-.3050536 5.1963734-.9842376 2.7569891-1.2298679 4.5131066-3.6269626 4.8208863-6.5794607.4985136-4.7841067-2.6143125-7.7747902-10.6321784-10.1849709l-.0021359-.0006435c-3.7356476-1.2047686-5.4904836-2.8064071-5.4911243-5.0426086.1099976-2.4715346 2.4015793-4.3179454 5.4932602-4.4331449 2.4904317.0062212 4.6923065.6675996 6.8557356 2.0598624.4562232.2767364.666607.2256796.9733188-.172263.035242-.0587797.1332787-.2012238.543367-.790093l.0012815-.0019308c.3829626-.5500403.5089793-.7336731.5403767-.7879478.258441-.4863266.2214903-.6738208-.244985-1.0046173-.459427-.3290803-1.7535544-1.0024722-2.4936356-1.2978721-2.0583439-.8211991-4.1863175-1.2199998-6.3042524-1.1788111-4.8198184.1046878-8.578747 3.2393171-8.8265087 7.3515337-.1572005 2.9703036 1.350301 5.3588174 4.5000778 7.124567.8829712.4661613 4.1115618 1.6865902 5.6184225 2.1278667 4.2847814 1.2547527 6.5186944 3.5630343 6.0571315 6.2864205-.4192725 2.4743234-3.0117991 4.1199394-6.6498372 4.2325647-2.6382344-.0549182-5.2963324-1.0217793-7.6043603-2.7562084-.0115337-.0083664-.0700567-.0519149-.1779185-.1323615-.1516472-.1130543-.1516472-.1130543-.1742875-.1300017-.4705335-.3247898-.7473431-.2977598-1.0346184.1302162-.0346012.0529875-.3919333.5963776-.5681431.8632459">
                                </path>
                            </g>
                        </svg>
                    </div>
                </a>
            </div>
        </div>
        <div class="product-detail">
            <section class="U9rGd1">
                <h2 class="Iv7FJp">MÔ TẢ SẢN PHẨM</h2>
                <div class="MCCLkq">
                    <div class="f7AU53"></div>
                </div>
            </section>
        </div>
        <div class="other-product">

        </div>

        @Html.Partial("~/Views/Shared/Home/SelectedModal.cshtml")
        @Html.Partial("~/Views/Shared/Home/OverMaxModal.cshtml")
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.cart.cookie.js"></script>
    <script src="~/Scripts/web.play.with.me.action.common.js"></script>
    <script>
        let maxSmallMediaCanShow; // Số lượng iten có thể hiển thị
        let countOfSmallMedia; // Số lượng media gồm video + image
        let selectedIndex; // selected index media đang chọn hiện tại
        let listItemData;// Mảng item, phần tử đầu tiên là video nếu có, sau là ảnh
        let itemObject; // object item đại diện đối tượng item server trả về
        let varition; // Models trong item
        let selectedIdModel;// Id của model được chọn để mua
        let quantityInput; // Input trước oninput

        quantityInput = 1;

        let limitQuantity = "Số lượng bạn chọn đã đạt mức tối đa của sản phẩm này";
        let dontSelectVariation = "Vui lòng chọn Phân loại hàng";
        // Get the modal thông báo đã thêm vào giỏ hàng thành công
        let modal = document.getElementById("myModal");
        // Get the modal nhắc số lượng trong giỏ vượt quá tồn kho
        let modalOverMax = document.getElementById("myModal-over-max");
        InitializeTickOkModal();

        // Constructor function for item objects
        function objMediaSrc(itemSrc, itemIsVideo) {
            this.src = itemSrc;
            this.isVideo = itemIsVideo;
        }

        async function GetItemFromId(id) {
            const searchParams = new URLSearchParams();
            searchParams.append("id", id);

            let query = "/Home/GetItemFromId";

            return RequestHttpPostPromise(searchParams, query);
        }

        // Từ danh sách model tính được tổng số lượng model đã bán, model rẻ nhất, model đắt nhất
        function SetPriceAndQuantityItemPage(item) {
            let cheapestModel = null;
            let mostExpensiveModel = null;
            for (let i = 0; i < item.models.length; i++) {

                // Model giá bìa rẻ nhất
                if (cheapestModel == null) {
                    cheapestModel = item.models[i];
                }
                else {
                    if (cheapestModel.bookCoverPrice > item.models[i].bookCoverPrice) {
                        cheapestModel = item.models[i];
                    }
                }
                // Model giá bìa đắt nhất
                if (mostExpensiveModel == null) {
                    mostExpensiveModel = item.models[i];
                }
                else {
                    if (mostExpensiveModel.bookCoverPrice < item.models[i].bookCoverPrice) {
                        mostExpensiveModel = item.models[i];
                    }
                }
            }
            item.cheapestModel = cheapestModel;
            item.mostExpensiveModel = mostExpensiveModel;
        }

        async function HomePageShowItem() {
            ShowCircleLoader();
            let responseDB = await GetItemFromId(GetValueFromUrlName("id"));
            RemoveCircleLoader();
            if (responseDB.responseText != "null") {
                itemObject = JSON.parse(responseDB.responseText);
                SetPriceAndQuantityItemPage(itemObject);
            }
            else {
                return;
            }

            // Show small media
            let itemSmallMedia = document.getElementById("item-small-media");
            itemSmallMedia.style.position = "relative";

            // Tính chiều cao item-medium-media
            if (scrWidth >= 500) {
                document.getElementById("item-medium-media").style.height = "500px";
            }
            else {
                document.getElementById("item-medium-media").style.height = scrWidth + "px";
            }

            // Mỗi video, image item sẽ chiếm 100(width) + 5(margin lef) + 5(margin lef) + 2(border) = 111 px
            // Tính số item có thể hiển thị
            maxSmallMediaCanShow = Math.floor(scrWidth / 112);
            if (isEmptyOrSpaces(itemObject.videoSrc)) {
                countOfSmallMedia = 0;
            }
            else {
                countOfSmallMedia = 1;
            }
            countOfSmallMedia = countOfSmallMedia + itemObject.imageSrc.length;

            // Cập nhật dữ liệu cho listItemData
            listItemData = [];
            if (!isEmptyOrSpaces(itemObject.videoSrc)) {
                listItemData.push(new objMediaSrc(itemObject.videoSrc, true));
            }
            for (let i = 0; i < itemObject.imageSrc.length; i++) {
                listItemData.push(new objMediaSrc(itemObject.imageSrc[i], false));
            }

            ShowSmallItem(0);

            ShowRightLeftArrow(itemSmallMedia);

            // Chọn item đầu tiên
            ChangeSelectedItem(document.getElementById("item-small-media-container").children[0]);

            ShowItemSomthing();

            // Hien thi mo ta chi tiet san pham
            ShowProductDescription();
        }

        function CreateContainerSmallItem(ItemData, i) {
            const container = document.createElement("div");
            container.className = "small-media";
            container.setAttribute("data-index", i);
            if (ItemData.isVideo) {
                const video = document.createElement("video");
                video.src = ItemData.src;
                video.controls = false;
                container.style.position = "relative";

                // Thêm video icon
                let videoIcon123 = document.createElement("div");
                videoIcon123.style.position = "absolute"
                videoIcon123.style.top = "30px";
                videoIcon123.style.left = "30px"
                videoIcon123.style.width = "40px";
                videoIcon123.style.height = "40px";
                videoIcon123.style.zIndex = 1;
                videoIcon123.innerHTML = '<svg xmlns = "http://www.w3.org/2000/svg" xmlns: xlink = "http://www.w3.org/1999/xlink" version = "1.1" width = "40" height = "40" viewBox = "0 0 256 256" xml: space = "preserve" ><g style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;" transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)"> <path d="M 45 0 C 20.147 0 0 20.147 0 45 c 0 24.853 20.147 45 45 45 s 45 -20.147 45 -45 C 90 20.147 69.853 0 45 0 z M 62.251 46.633 L 37.789 60.756 c -1.258 0.726 -2.829 -0.181 -2.829 -1.633 V 30.877 c 0 -1.452 1.572 -2.36 2.829 -1.634 l 24.461 14.123 C 63.508 44.092 63.508 45.907 62.251 46.633 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round" /> </g> </svg >';

                container.appendChild(video);
                container.appendChild(videoIcon123);
            }
            else {
                const img = document.createElement("img");
                img.src = Get320VersionOfImageSrc(ItemData.src);
                container.appendChild(img);
            }
            container.addEventListener("mouseenter", function (event) {
                ChangeSelectedItem(event.currentTarget);
            });

            return container;
        }

        function ShowSmallItem(
            start // index của item đầu tiên
        ) {
            let itemSmallMediaContainer = document.getElementById("item-small-media-container");
            // Xóa item cũ nếu có
            itemSmallMediaContainer.innerHTML = "";

            for (let i = start; i < listItemData.length && i < start + maxSmallMediaCanShow; i++) {
                itemSmallMediaContainer.appendChild(CreateContainerSmallItem(listItemData[i], i));
            }
        }

        function ShowRightLeftArrow(itemSmallMedia) {
            if (countOfSmallMedia > maxSmallMediaCanShow) {
                // Add mũi tên di chuyển sang trái
                let leftArrow = document.createElement("div");
                leftArrow.className = "right-left-arrow";
                leftArrow.style.position = "absolute"
                leftArrow.style.top = "10px"
                leftArrow.style.width = "40px";
                leftArrow.style.height = "100px";
                leftArrow.style.zIndex = 1;
                leftArrow.innerHTML = '<svg  xmlns="http://www.w3.org/2000/svg" version="1.1" height="100" width="40" fill-opacity="0.4"> <polygon points="10,50 30,30 30,70" style="fill:lime;" /> </svg>';
                leftArrow.addEventListener("click", function () {

                    let itemContainer = document.getElementById("item-small-media-container");
                    let i = parseInt(itemContainer.children[0].getAttribute("data-index"));
                    if (i == 0)
                        return;
                    i = i - 1;
                    // Xóa item cuối cùng
                    itemContainer.lastElementChild.remove();
                    // Thêm item tử đầu tiên
                    let firstItem = CreateContainerSmallItem(listItemData[i], i);
                    if (i == selectedIndex) {
                        firstItem.style.borderColor = "rgb(255, 0, 0)";
                    }
                    itemContainer.insertBefore(firstItem, itemContainer.children[0]);
                });
                itemSmallMedia.appendChild(leftArrow);

                // Add mũi tên di chuyển sang phải
                let rightArrow = document.createElement("div");
                rightArrow.className = "right-left-arrow";
                rightArrow.style.position = "absolute";
                rightArrow.style.top = "10px"
                rightArrow.style.right = "0px";
                rightArrow.style.width = "40px";
                rightArrow.style.height = "100px";
                rightArrow.style.zIndex = 1;
                rightArrow.innerHTML = '<svg  xmlns="http://www.w3.org/2000/svg" version="1.1" height="100" width="40" fill-opacity="0.4"> <polygon points="10,30 30,50 10,70" style="fill:lime;" /> </svg>';
                rightArrow.addEventListener("click", function () {

                    let itemContainer = document.getElementById("item-small-media-container");
                    let i = parseInt(itemContainer.lastElementChild.getAttribute("data-index"));
                    if (i == countOfSmallMedia - 1) {
                        return;
                    }

                    i = i + 1;

                    // Xóa item đầu tiên
                    itemContainer.firstElementChild.remove();
                    // Thêm item cuối cùng
                    let lastItem = CreateContainerSmallItem(listItemData[i], i);
                    if (i == selectedIndex) {
                        lastItem.style.borderColor = "rgb(255, 0, 0)";
                    }
                    itemContainer.insertBefore(lastItem, null);
                });
                itemSmallMedia.appendChild(rightArrow);
            }
        }

        // Show medium item từ small item đã chọn, đã đặt chuột
        function ShowMediumItemFromSelectedSmallItem(i) {
            // Show medium media
            let mediumImage = document.getElementById("medium-image");

            let mediumVideo = document.getElementById("medium-video");
            if (listItemData[i].isVideo) {

                if (isEmptyOrSpaces(mediumVideo.src)) {
                    mediumVideo.src = listItemData[i].src;
                }

                if (mediumVideo.style.display != "block") {
                    mediumVideo.play();
                    mediumVideo.style.display = "block";
                    mediumImage.style.display = "none";
                }
            }
            else {
                mediumImage.src = listItemData[i].src;
                if (mediumVideo.src != null) {
                    mediumVideo.pause();
                }
                if (mediumImage.style.display != "block") {
                    mediumVideo.style.display = "none";
                    mediumImage.style.display = "block";
                }
            }
        }

        // Show medium item tư variation đã chọn, đã đặt chuột
        // Hiển thị ảnh đại diện của variation
        function ShowMediumItemFromSelectedVariation(src) {
            let mediumImage = document.getElementById("medium-image");

            let mediumVideo = document.getElementById("medium-video");
            mediumImage.src = src;

            if (mediumVideo.style.display != "none") {
                mediumVideo.style.display = "none";
                mediumVideo.pause();
                mediumImage.style.display = "block";
            }
        }

        function ShowProductDescription() {
            if (itemObject.detail == null) {
                // An mo ta san pham
                document.getElementsByClassName("product-detail")[0].style.display = "none";
                return;
            }

            let p = document.createElement("p");
            p.className = "irIKAp";
            p.innerHTML = itemObject.detail;
            document.getElementsByClassName("f7AU53")[0].appendChild(p);
        }

        function GetModelObjectFromModelId(modelId) {
            for (let i = 0; i < itemObject.models.length; i++) {
                if (modelId == itemObject.models[i].id) {
                    return itemObject.models[i];
                }
            }
        }

        // Thay đổi medium media theo variation đã chọn, nếu chưa chọn variation thì check theo small item đã chọn
        function ShowMediumMediaFromSelectedObj() {
            // Variation đã chọn và có từ 2 biến thể/ model trở lên
            if (selectedIdModel != null && itemObject.models.length > 1) {
                ShowMediumItemFromSelectedVariation(GetModelObjectFromModelId(selectedIdModel).imageSrc);
            }
            else {
                // Hiển thị small item/media đã chọn
                ShowMediumItemFromSelectedSmallItem(selectedIndex);
            }
        }

        // Thay đổi medium media khi di chuyển bên trên small item
        function ChangeSelectedItem(newSelectedItem) {
            if (selectedIndex != null) {
                if (selectedIndex == parseInt(newSelectedItem.getAttribute("data-index")))// là 1 element
                    return;
            }
            let oldSelectedItem = selectedIndex;
            selectedIndex = parseInt(newSelectedItem.getAttribute("data-index"));

            // Set border color về màu không được chọn
            if (oldSelectedItem != null) {
                let itemSmallMediaContainer = document.getElementById("item-small-media-container");
                for (let i = 0; i < itemSmallMediaContainer.children.length; i++) {
                    if (parseInt(itemSmallMediaContainer.children[i].getAttribute("data-index")) == oldSelectedItem) {
                        itemSmallMediaContainer.children[i].style.borderColor = "rgb(228, 228, 222)";
                        break;
                    }
                }
            }

            // Set border color về màu không được chọn
            newSelectedItem.style.borderColor = "rgb(255, 0, 0)";

            // Hiển thị item ở kích thước to hơn
            ShowMediumItemFromSelectedSmallItem(selectedIndex);
        }

        function VariationClick(newSelectVariation) {
            // Lấy id variation/ model
            let id = parseInt(newSelectVariation.getAttribute("data-model-id"));

            // Bỏ dòng chữ chưa chọn phân loại hàng nếu đang hiển thị
            {
                if (document.getElementsByClassName("I-H1Co")[0].style.display != "none") {
                    document.getElementsByClassName("I-H1Co")[0].style.display = "none";
                }
                // Thay màu nền div chứa phân loại về mặc định
                document.getElementsByClassName("_7VDqtl")[0].style.backgroundColor = "initial";
            }
            // Bỏ chọn variontion cũ nếu có
            if (selectedIdModel != null) {
                if (selectedIdModel != id) {//  Bỏ chọn border màu đỏ button cũ
                    document.getElementById("check-container").parentElement.style.borderColor = "rgba(0, 0, 0, .09)";
                }
                // Bỏ icon V
                document.getElementById("check-container").remove();
                if (selectedIdModel == id) {
                    selectedIdModel = null;
                    ShowPriceAndReadyMaxQuantity();
                    return;
                }
            }

            selectedIdModel = id;
            // Hiển thị đã chọn V đỏ góc dưới phải nếu chưa có, có rồi thì bỏ chọn
            let checkContainer = document.createElement("div");
            checkContainer.id = "check-container";

            checkContainer.innerHTML = '<svg xmlns = "http://www.w3.org/2000/svg" xmlns: xlink = "http://www.w3.org/1999/xlink" version = "1.1" viewBox="0 0 12 12" class="shopee-svg-icon icon-tick-bold"><g><path d="m5.2 10.9c-.2 0-.5-.1-.7-.2l-4.2-3.7c-.4-.4-.5-1-.1-1.4s1-.5 1.4-.1l3.4 3 5.1-7c .3-.4 1-.5 1.4-.2s.5 1 .2 1.4l-5.7 7.9c-.2.2-.4.4-.7.4 0-.1 0-.1-.1-.1z"></path></g></svg>';
            newSelectVariation.appendChild(checkContainer);
            // Luôn hiển thị border màu đỏ với variation đã chọn
            newSelectVariation.style.borderColor = "rgb(255, 0, 0)";
            ShowPriceAndReadyMaxQuantity();
        }

        // Lấy số lượng max của 1 variation/model.
        // Nếu chưa chọn variation / model số lượng max = tổng số lượng các variation / model
        // trong item
        function GetMaxQuantityInput() {
            let maxQuantity = 0;
            if (selectedIdModel == null) { // tổng số lượng các variation / model trong item
                for (let i = 0; i < itemObject.models.length; i++) {
                    maxQuantity = maxQuantity + itemObject.models[i].quantity;
                }
            }
            else {
                maxQuantity = GetModelObjectFromModelId(selectedIdModel).quantity;
            }
            return maxQuantity;
        }

        // Thay đổi medium media khi di chuyển chuột trên variation button
        function VariationMouseEnter(newSelectVariation) {
            newSelectVariation.style.borderColor = "rgba(255, 0, 0)";
            ShowMediumItemFromSelectedVariation(newSelectVariation.getElementsByClassName("variation-image")[0].src);
        }

        // Thay đổi medium media khi di chuyển chuột ra khỏi variation button
        function VariationMouseLeave(newSelectVariation) {
            ShowMediumMediaFromSelectedObj();
            if (parseInt(newSelectVariation.getAttribute("data-model-id")) != selectedIdModel) {
                newSelectVariation.style.borderColor = "rgba(0, 0, 0, .09)";
            }
        }

        function GetModelObjectFromModelId(modelId) {
            let modelObject = null;
            for (let i = 0; i < itemObject.models.length; i++) {
                if (modelId == itemObject.models[i].id) {
                    modelObject = itemObject.models[i];
                    break;
                }
            }
            return modelObject;
        }

        // Show giá bìa, giá bán và % triết khấu
        function ShowPrice() {
            // Chưa chọn model nên ta hiển thị biến thể giá nhỏ nhất - đắt nhất, chiết khấu lớn nhất,
            // thường các biến thể cùng item sẽ chiết khấu như nhau
            if (selectedIdModel == null) {
                // Giá bìa
                document.getElementById("book-cover-price").innerHTML =
                    ConvertMoneyToTextWithIcon(itemObject.cheapestModel.bookCoverPrice) + " - " +
                    ConvertMoneyToTextWithIcon(itemObject.mostExpensiveModel.bookCoverPrice);

                // Giá bán thực tế
                document.getElementById("price").innerHTML =
                    ConvertMoneyToTextWithIcon(itemObject.cheapestModel.price) + " - " +
                    ConvertMoneyToTextWithIcon(itemObject.mostExpensiveModel.price);

                // % Chiết khấu
                let discount = itemObject.cheapestModel.discount;

                document.getElementById("discount").innerHTML = discount + "% GIẢM";
            }
            else {
                let modelObject = GetModelObjectFromModelId(selectedIdModel);

                // Giá bìa
                document.getElementById("book-cover-price").innerHTML =
                    ConvertMoneyToTextWithIcon(modelObject.bookCoverPrice);

                // Giá bán thực tế
                document.getElementById("price").innerHTML =
                    ConvertMoneyToTextWithIcon(modelObject.price);

                // % Chiết khấu
                let discount = modelObject.discount;
                document.getElementById("discount").innerHTML = discount + "% GIẢM";
            }
        }

        function ShowReadyMaxQuantity() {
            document.getElementById("max-quatity").innerHTML = GetMaxQuantityInput().toString() + " sản phẩm có sẵn";
        }

        function ShowPriceAndReadyMaxQuantity() {
            ShowPrice();
            ShowReadyMaxQuantity();

            // Refresh input quantity ve 1
            quantityInput = 1;
            if (GetMaxQuantityInput() == 0)
                quantityInput = 0;
            document.getElementById("quantity-input").value = quantityInput.toString();
            if (document.getElementsByClassName("I-H1Co")[0].style.display != "none") {
                document.getElementsByClassName("I-H1Co")[0].style.display = "none";
            }
        }

        // Gồm: Tên, giá bìa, giá chiết khấu, lựa chọn
        function ShowItemSomthing() {
            if (itemObject == null)
                return;

            // Show tên
            document.getElementById("item-name-h1").innerHTML = itemObject.name;

            if (itemObject.models.length > 1) {
                // Thêm các biến thể
                let variationContainer = document.getElementById("item-variation-container");
                for (let i = 0; i < itemObject.models.length; i++) {
                    let variationButton = document.createElement("button");
                    variationButton.type = "button";
                    variationButton.innerHTML = itemObject.models[i].name;
                    variationButton.className = "variation-button";
                    variationButton.setAttribute("data-model-id", itemObject.models[i].id);
                    variationButton.addEventListener("click", function (event) {
                        VariationClick(event.currentTarget);
                    });

                    variationButton.addEventListener("mouseenter", function (event) {
                        VariationMouseEnter(event.currentTarget);
                    });

                    variationButton.addEventListener("mouseleave", function (event) {
                        VariationMouseLeave(event.currentTarget);
                    });

                    let variationImg = document.createElement("img");
                    variationImg.className = "variation-image";
                    variationImg.src = Get320VersionOfImageSrc(itemObject.models[i].imageSrc);
                    variationButton.appendChild(variationImg);

                    variationContainer.appendChild(variationButton);
                }
            }
            else {
                // Mặc định chọn biến thể là model duy nhất
                selectedIdModel = itemObject.models[0].id;
            }
            // Show giá bìa, giá bán và % triết khấu, so luong max
            ShowPriceAndReadyMaxQuantity();

            // Show nút Shopee để di chuyển qua sàn Shopee
            if (itemObject.shopeeItemId != 0) {
                document.getElementsByClassName("psinpachgwl90")[0].style.display = "flex";
                document.getElementsByClassName("fcak09va86")[0].href = GetShopeeItemUrl(itemObject.shopeeItemId);
            }
        }

        function Decrease() {
            if (quantityInput > 1) {
                quantityInput = quantityInput - 1;
                document.getElementById("quantity-input").value = quantityInput.toString();
            }
            if (document.getElementsByClassName("I-H1Co")[0].style.display != "none") {
                document.getElementsByClassName("I-H1Co")[0].style.display = "none";
            }
        }

        function Increase() {
            let maxQuatity = GetMaxQuantityInput();
            if (quantityInput < maxQuatity) {
                quantityInput = quantityInput + 1;
                document.getElementById("quantity-input").value = quantityInput.toString();
            }
            else {
                document.getElementsByClassName("I-H1Co")[0].innerHTML = limitQuantity;
                document.getElementsByClassName("I-H1Co")[0].style.display = "block";
            }
        }

        function ValidateInput(event) {
            let newInput = document.getElementById("quantity-input").value;
            if (IsNumeric(newInput)) {
                let iInput = ConvertToInt(newInput);
                let maxQuantity = GetMaxQuantityInput();
                if (iInput === 0) {
                    quantityInput = 1;
                    if (maxQuantity == 0) {
                        quantityInput = 0;
                    }
                }

                if (iInput > maxQuantity) {
                    quantityInput = maxQuantity;
                    document.getElementsByClassName("I-H1Co")[0].style.display = "block";
                }
                else {
                    quantityInput = iInput;
                    if (document.getElementsByClassName("I-H1Co")[0].style.display != "none") {
                        document.getElementsByClassName("I-H1Co")[0].style.display = "none";
                    }
                }
            }
            document.getElementById("quantity-input").value = quantityInput.toString();
        }

        function DontSelectModel() {
            // Chưa chọn phân loại hiện thị thông báo dòng chữ đỏ và thay màu nền div chứa phân loại
            document.getElementsByClassName("I-H1Co")[0].innerHTML = dontSelectVariation;
            document.getElementsByClassName("I-H1Co")[0].style.display = "block";
            // Thay màu nền div chứa phân loại
            document.getElementsByClassName("_7VDqtl")[0].style.backgroundColor = "#dee2e6";
        }

        // Thêm sản phẩm muốn mua vào giỏ hàng
        // Sản phẩm thêm vào giỏ hàng sẽ có real=0
        // cookie có dạng: cart=id=123#q=10#real=1$id=321#q=1#real=0$....$id=321#q=2#real=0
        async function AddToCart() {

            // Chưa chọn phân loại hiện thị thông báo dòng chữ đỏ và thay màu nền div chứa phân loại
            if (selectedIdModel == null) {
                //document.getElementsByClassName("I-H1Co")[0].innerHTML = dontSelectVariation;
                //document.getElementsByClassName("I-H1Co")[0].style.display = "block";
                //// Thay màu nền div chứa phân loại
                //document.getElementsByClassName("_7VDqtl")[0].style.backgroundColor = "#dee2e6";
                DontSelectModel();
                return;
            }

            let maxQuantity = GetMaxQuantityInput();
            let q = parseInt(document.getElementById("quantity-input").value);
            let overMax = false; // true: Nếu số lượng khách chọn + số lượng đã chọn lưu trong cookie/ db vượt quá số lượng max
            let obj = new objCartCookie("id=" + selectedIdModel.toString() + "#q=" + q.toString()
                + "#real=0");
            // Là khách vãng lai
            if (CheckAnonymousCustomer()) {
                let listCartCookie = RefreshRealOfCartCookieAndGet();

                let overMax = InsertAtBeginToListCartCookieCheckExist(listCartCookie, obj, maxQuantity);
                if (overMax) { // Hiện thị modal thông báo vượt tồn kho
                    document.getElementsByClassName("shopee-alert-popup__message")[0].innerHTML =
                        "Bạn đã có " + maxQuantity.toString() + " sản phẩm trong giỏ hàng. Không thể thêm số lượng đã chọn vào giỏ hàng vì sẽ vượt quá tồn kho của cửa hàng"
                    modalOverMax.style.display = "flex";
                }
                SetCartCookieFromListCartCookieObject(listCartCookie);
            }
            else { // Khách đăng nhập
                //
                let responseDB = await Item_AddModelToCart(obj, maxQuantity);
                let resultObj = JSON.parse(responseDB.responseText);
                if (resultObj.State == 4) { // Hiện thị modal thông báo vượt tồn kho
                    overMax = true;
                    document.getElementsByClassName("shopee-alert-popup__message")[0].innerHTML =
                        "Bạn đã có " + maxQuantity.toString() + " sản phẩm trong giỏ hàng. Không thể thêm số lượng đã chọn vào giỏ hàng vì sẽ vượt quá tồn kho của cửa hàng"
                    modalOverMax.style.display = "flex";
                }

            }
            await UpdateCartCount();

            if (overMax) {
                return;
            }
            ShowModal();
            setTimeout(CloseModal, 1000);
        }

        async function Item_AddModelToCart(obj, maxQuantity) {
            //
            const searchParams = new URLSearchParams();
            searchParams.append("uidCookie", GetCookie(uidKey));
            searchParams.append("cartObj", JSON.stringify(obj));
            searchParams.append("maxQuantity", maxQuantity);


            let query = "/Home/Item_AddModelToCart";

            return await RequestHttpPostPromise(searchParams, query);
        }

        // Chỉ khi đang chọn model mới chuyển sang trang giỏ hàng, chưa chọn hiện modal thông báo
        // Model đang chọn sẽ có real=1
        async function BuyNow() {
            // Chưa chọn phân loại hiện thị thông báo dòng chữ đỏ và thay màu nền div chứa phân loại
            if (selectedIdModel == null) {
                DontSelectModel();
                return;
            }

            let maxQuantity = GetMaxQuantityInput();
            let q = parseInt(document.getElementById("quantity-input").value);
            let obj = new objCartCookie("id=" + selectedIdModel.toString() + "#q=" + q.toString()
                + "#real=1");


            //let overMax = false; // true: Nếu số lượng khách chọn + số lượng đã chọn lưu trong cookie/ db vượt quá số lượng max
            // Là khách vãng lai
            if (CheckAnonymousCustomer()) {
                let listCartCookie = RefreshRealOfCartCookieAndGet();

                InsertAtBeginToListCartCookieCheckExist(listCartCookie, obj, maxQuantity);

                SetCartCookieFromListCartCookieObject(listCartCookie);

                location.href = "/Home/Cart";

            }
            else { // Khách đăng nhập
                let responseDB = await Item_AddModelToCart(obj, maxQuantity);
                //let resultObj = JSON.parse(responseDB.responseText);
                location.href = "/Home/Cart";
            }

        }

        function CloseModal() {
            modal.style.display = "none";
        }

        function CloseOverMaxModal() {
            modalOverMax.style.display = "none";
        }

        function ShowModal() {
            modal.style.display = "flex";
        }

        function InitializeTickOkModal() {
            // Get the <span> element that closes the modal
            let tickOk = document.getElementsByClassName("tick-ok")[0];

            tickOk.onclick = function () {
                CloseModal();
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    CloseModal();
                }
            }
        }
    </script>
</body>
</html>
