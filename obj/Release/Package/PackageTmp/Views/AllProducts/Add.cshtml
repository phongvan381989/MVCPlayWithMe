@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Play with me</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/web.play.with.me.common.css">
    <style>
    </style>
</head>
<body>

    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        <form>
            <label for="barcode">Mã vạch:</label><br>
            <input type="text" id="barcode" value=""><br>

            <label for="product-name">Tên:</label><br>
            <input type="text" id="product-name" value=""><br>

            <label for="combo-name">Tên combo:</label><br>
            <input type="text" id="combo-name" value=""><br>

            <label for="category">Thể loại:</label><br>
            <input type="text" id="category" value=""><br>

            <label for="book-cover-price">Giá bìa:</label><br>
            <input type="number" id="book-cover-price" value=""><br>

            <label for="author">Tác giả:</label><br>
            <input type="text" id="author" value=""><br>

            <label for="translator">Người dịch:</label><br>
            <input type="text" id="translator" value=""><br>

            <label for="publisher-id">Nhà phát hành:</label><br>
            <select id="publisher-id">
                @foreach (var pub in ViewData["lsPublisher"] as IList<MVCPlayWithMe.Models.Publisher>)
                {
                    <option value=@pub.id>@pub.publisherName</option>
                }
            </select>
            <button type="submit" formaction="/Publisher/Index" formtarget="_self">Thêm nhà phát hành</button>
            <br />
            <label for="publishing-company">Nhà xuất bản:</label><br>
            <input type="text" id="publishing-company" value=""><br>

            <label for="publishing-time">Năm xuất bản:</label><br>
            <input type="date" id="publishing-time" value=""><br>

            <label for="product-long">Dài(cm):</label><br>
            <input type="number" id="product-long" value=""><br>

            <label for="product-wide">Rộng(cm):</label><br>
            <input type="number" id="product-wide" value=""><br>

            <label for="product-high">Cao(cm):</label><br>
            <input type="number" id="product-high" value=""><br>

            <label for="product-weight">Nặng(g):</label><br>
            <input type="number" id="product-weight" value=""><br>

            <label for="position-in-warehouse">Vị trí lưu kho:</label><br>
            <input type="text" id="position-in-warehouse" value=""><br>

            <label for="detail">Thông tin chi tiết thêm:</label><br>
            <textarea id="detail" rows="10" style="width:100%" value=""></textarea><br>

            <input type="file"
                   id="fileElem"
                   multiple
                   accept="image/*"
                   style="display:none" />
            <a href="#" id="fileSelect">Chọn ảnh</a>
            <div id="fileList">
                <p>Chưa ảnh nào được chọn!</p>
            </div>
            <a href="#" id="fileUnSelect">Bỏ chọn ảnh</a>
        </form>

        <div>
            <button type="button" onclick="AddNewPro()">Thêm mới sản phẩm</button>
        </div>
        <p id="result-insert"></p>

        <script>
            function AddNewPro() {
                let barcode = document.getElementById("barcode").value;
                if (isEmptyOrSpaces(barcode)) {
                    document.getElementById("result-insert").innerHTML = "Mã vạch trống.";
                    if (DEBUG) {
                        console.log("Mã vạch trống.");
                    }
                    return;
                }

                let productName = document.getElementById("product-name").value;
                if (isEmptyOrSpaces(productName)) {
                    document.getElementById("result-insert").innerHTML = "Tên sản phẩm trống.";
                    if (DEBUG) {
                        console.log("Tên sản phẩm trống.");
                    }
                    return;
                }

                let productID = 0;
                const xhttp = new XMLHttpRequest();
                xhttp.onload = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        //document.getElementById("result-insert").innerHTML = this.responseText;
                        productID = parseInt(this.responseText);
                        if (productID === -1) {
                            document.getElementById("result-insert").innerHTML = "Có lỗi phía database. Ảnh (nếu có) chưa được upload."
                        }
                        else if (productID === -2) {
                            document.getElementById("result-insert").innerHTML = "Tên sản phẩm không tồn tại. Ảnh (nếu có) chưa được upload."
                        }
                        else if (productID === -3) {
                            document.getElementById("result-insert").innerHTML = "Tên sản phẩm đã có.";
                        }
                        else if (productID === -4) {
                            document.getElementById("result-insert").innerHTML = "Mã barcode đã có."
                        }
                        else {
                            // Bắt đầu upload ảnh sản phẩm lên server
                            sendFiles(productID);
                        }

                    }
                }

                const searchParams = new URLSearchParams();
                searchParams.append("barcode", barcode);

                searchParams.append("productName", productName);

                searchParams.append("comboName", document.getElementById("combo-name").value);

                searchParams.append("category", document.getElementById("category").value);

                let bookCoverPrice = document.getElementById("book-cover-price").value;
                if (isEmptyOrSpaces(bookCoverPrice)) {
                    bookCoverPrice = 0;
                }
                searchParams.append("bookCoverPrice", bookCoverPrice);

                searchParams.append("author", document.getElementById("author").value);
                searchParams.append("translator", document.getElementById("translator").value);

                let publisherId = document.getElementById("publisher-id").value;
                if (isEmptyOrSpaces(publisherId)) {
                    publisherId = 0;
                }
                searchParams.append("publisherId", publisherId);

                searchParams.append("publishingCompany", document.getElementById("publishing-company").value);

                let publishingTime = document.getElementById("publishing-time").value;
                if (isEmptyOrSpaces(publishingTime)) {
                    publishingTime = "2018-08-05"; // Giá trị mặc định là ngày sinh Sâu béo
                }
                searchParams.append("publishingTime", publishingTime);

                let productLong = document.getElementById("product-long").value;
                if (isEmptyOrSpaces(productLong)) {
                    productLong = 0;
                }
                searchParams.append("productLong", productLong);

                let productWide = document.getElementById("product-wide").value;
                if (isEmptyOrSpaces(productWide)) {
                    productWide = 0;
                }
                searchParams.append("productWide", productWide);

                let productHigh = document.getElementById("product-high").value;
                if (isEmptyOrSpaces(productHigh)) {
                    productHigh = 0;
                }
                searchParams.append("productHigh", productHigh);


                let productWeight = document.getElementById("product-weight").value;
                if (isEmptyOrSpaces(productWeight)) {
                    productWeight = 0;
                }
                searchParams.append("productWeight", productWeight);

                searchParams.append("positionInWarehouse", document.getElementById("position-in-warehouse").value);
                searchParams.append("detail", document.getElementById("detail").value);
                let query = "/AllProducts/AddNewPro?" + searchParams.toString();
                if (DEBUG) {
                    console.log(query);
                }
                xhttp.open("GET", query);
                xhttp.send();
            }

            const fileSelect = document.getElementById("fileSelect"),
                fileUnSelect = document.getElementById("fileUnSelect"),
                fileElem = document.getElementById("fileElem"),
                fileList = document.getElementById("fileList");

            fileSelect.addEventListener("click", (e) => {
                if (fileElem) {
                    fileElem.click();
                }
                e.preventDefault(); // prevent navigation to "#"
            }, false);

            fileUnSelect.addEventListener("click", (e) => {
                fileList.innerHTML = "<p>Chưa ảnh nào được chọn!</p>";
                e.preventDefault(); // prevent navigation to "#"
            }, false);

            fileElem.addEventListener("change", handleFiles, false);

            // Xóa ảnh đã chọn khi click
            function removeImage(el) {
                el.remove();
            };

            function handleFiles() {
                if (!this.files.length) {
                    let list = document.getElementById("ulImageList");
                    if (list == null) {
                        fileList.innerHTML = "<p>Chưa ảnh nào được chọn!</p>";
                    }
                } else {
                    let list = document.getElementById("ulImageList");
                    if (DEBUG) {
                        console.log(list);
                    }

                    if (list == null) {
                        fileList.innerHTML = "";
                        list = document.createElement("ul");
                        list.id = "ulImageList";
                        fileList.appendChild(list);
                    }


                    for (let i = 0; i < this.files.length; i++) {
                        const li = document.createElement("li");
                        li.onclick = function () { removeImage(this) };
                        list.appendChild(li);

                        const img = document.createElement("img");
                        img.src = URL.createObjectURL(this.files[i]);
                        img.file = this.files[i];
                        img.fileName = this.files[i].name;
                        img.className = "objImage";
                        img.height = 60;
                        img.onload = () => {
                            URL.revokeObjectURL(img.src);
                        }
                        li.appendChild(img);
                        const info = document.createElement("span");
                        info.innerHTML = `${this.files[i].name}: ${this.files[i].size} bytes`;
                        li.appendChild(info);
                    }
                }
            }

            function sendFiles(productId) {
                const imgs = document.querySelectorAll(".objImage");
                if (imgs.length === 0)
                    return;

                // Gửi yêu cầu xóa hết ảnh cũ
                const xhttp = new XMLHttpRequest();
                xhttp.onload = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        //document.getElementById("result-insert").innerHTML = this.responseText;
                        if (this.responseText === "1") {
                            // Upload ảnh lên server
                            for (let i = 0; i < imgs.length; i++) {
                                if (DEBUG) {
                                    console.log("image file name: " + imgs[i].fileName);
                                }
                                new FileUpload(productId, imgs[i], imgs[i].file, imgs[i].fileName, i);
                            }
                        }
                    }
                }
                const searchParams = new URLSearchParams();
                searchParams.append("productId", productId);
                let query = "/AllProducts/DeleteOldImage?" + searchParams.toString();
                if (DEBUG) {
                    console.log(query);
                }
                xhttp.open("GET", query);
                xhttp.send();

            }

            function FileUpload(productId, img, file, fileName, fileOrder) {
                if (DEBUG) {
                    console.log("productId: " + productId);
                    console.log("Order: " + fileOrder);
                }
                //const reader = new FileReader();
                this.ctrl = createThrobber(img);
                const xhr = new XMLHttpRequest();
                this.xhr = xhr;

                const self = this;
                this.xhr.upload.addEventListener("progress", (e) => {
                    if (e.lengthComputable) {
                        const percentage = Math.round((e.loaded * 100) / e.total);
                        self.ctrl.update(percentage);
                    }
                }, false);

                xhr.upload.addEventListener("load", (e) => {
                    self.ctrl.update(100);
                    const canvas = self.ctrl.ctx.canvas;
                    //canvas.parentNode.removeChild(canvas);
                }, false);
                xhr.open("POST", "/AllProducts/UploadImage");
                //xhr.overrideMimeType('text/plain; charset=x-user-defined-binary');
                xhr.setRequestHeader("Content-Type", "multipart/form-data");
                //let newFileName = `${fileOrder}.${GetExtensionOfFileName(fileName)}`;
                xhr.setRequestHeader("imgFileName", `${fileOrder}.${GetExtensionOfFileName(fileName)}`);
                xhr.setRequestHeader("productId", productId);
                xhr.send(file);
                //reader.onload = (evt) => {
                //    xhr.send(evt.target.result);
                //};
                //reader.readAsBinaryString(file);
            }

            function createThrobber(img) {
                const throbberWidth = 64;
                const throbberHeight = 6;
                const throbber = document.createElement('canvas');
                throbber.classList.add('upload-progress');
                throbber.setAttribute('width', throbberWidth);
                throbber.setAttribute('height', throbberHeight);
                img.parentNode.appendChild(throbber);
                throbber.ctx = throbber.getContext('2d');
                throbber.ctx.fillStyle = 'orange';
                throbber.update = (percent) => {
                    throbber.ctx.fillRect(0, 0, throbberWidth * percent / 100, throbberHeight);
                    if (percent === 100) {
                        throbber.ctx.fillStyle = 'green';
                    }
                }
                throbber.update(0);
                return throbber;
            }
        </script>
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
</body>
</html>
