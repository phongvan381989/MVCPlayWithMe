@*@model IEnumerable<MVCPlayWithMe.Models.Item>*@
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Play with me</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/web.play.with.me.common.css">
    <style>
        .product-item {
            text-decoration: none;
            display: block;
            cursor: pointer;
            border-radius: 10px;
            height: 100%;
            background: white;
        }

        .product-item:hover {
                background: #e1e1e1;
                border: 1px solid #d0d0d0;
            }

        .image-wrapper {
            max-width: 100%;
            height: auto;
        }

        .card-img-top {
            border-top-right-radius: 10px;
            border-top-left-radius: 10px;
        }

        .product-name > h3 {
            font-weight: 400;
            font-size: 14px;
            color: rgb(56, 56, 61);
            margin: 0px;
            word-break: break-word;
            width: 180px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2; /* number of lines to show */
            line-height: 1.5em;
            max-height: 3em;
        }
    </style>
</head>
<body onload="Search()">
    @*<p id="demo1"></p>
        <p id="demo2">aaaaaaaaaaa</p>
        <script>
            document.getElementById("demo1").innerHTML =
                "Browser inner window width: " + window.innerWidth + "px<br>" +
                "Browser inner window height: " + window.innerHeight + "px<br><br>" +

                "Screen Width: " + screen.width + "px<br>" +
                "Screen available width: " + screen.availWidth + "px<br><br>" +

                "Screen Height: " + screen.height + "px<br>" +
                "Screen Available Height: " + screen.availHeight + "px";
            function myFunction() {
                alert("Hello World  1!");
            }
        </script>*@
    <div id="biggestContainer">
        @Html.Partial("~/Views/Shared/biggestContainer_Top.cshtml")
        @*<div class="config-max-width padding-container">*@
        @Html.Partial("~/Views/Shared/Home/SearchResult.cshtml"@*, Model*@)
        @*</div>*@
    </div>
    <script src="~/Scripts/web.play.with.me.update.width.js"></script>
    <script src="~/Scripts/web.play.with.me.common.js"></script>
    <script src="~/Scripts/web.play.with.me.paging.js"></script>
    <script>
        // Tham số tìm kiếm
        let namePara;
        let hasMapping;
        // Đảm bảo item trên 1 page chia hết số item trên 1 row
        itemOnPage = itemOnRow * rowOnPage;
        // Mục đích lấy số lượng trong kết quả trả về phục vụ phân trang
        async function Search() {
            namePara = "";
            hasMapping = 1;

            let url = "/Home/SearchItemCount";
            const searchParams = new URLSearchParams();
            SetSearchParameter(searchParams);
            let resObj = await RequestHttpGetPromise(searchParams, url);
            if (DEBUG) {
                console.log("responseText: " + resObj.responseText);
            }
            // Lấy số lượng sản phẩm trong kết quả trả về
            countModel = parseInt(resObj.responseText);
            if (countModel == 0) {
                document.getElementById("empty-result").style.display = "block";
                document.getElementById("search-result").style.display = "none";
                return;
            }

            document.getElementById("empty-result").style.display = "none";
            document.getElementById("search-result").style.display = "block";

            maxPage = Math.floor(countModel / itemOnPage)
            if (countModel % itemOnPage != 0)
                maxPage = maxPage + 1;
            currentPage = -1; // Làm mới currentPage
            // Lấy dữ liệu cho page 1
            ChangePage(1, "/Home/ChangePage");
        }

        function SetSearchParameter(searchParams) {
            searchParams.append("namePara", namePara);
            searchParams.append("hasMapping", hasMapping);
        }

        function ShowSearchingResult(resObj) {
            let listItem = JSON.parse(resObj.responseText);

            // Làm trống
            document.getElementById("biggestContainer_body_wraper_item").innerHTML = "";

            // Show
            let table = document.getElementById("biggestContainer_body_wraper_item");
            let length = listItem.length;
            // Lấy mẫu
            let sample = document.getElementById("product-for-selector-sample");

            for (let i = 0; i < length; i++) {
                let item = listItem[i];
                let itemElement = sample.cloneNode(true);

                // Thay đổi id
                itemElement.id = "hardcode" + i;
                // Set link chi tiết sản phẩm
                itemElement.getElementsByClassName("product-item")[0].href = "Home/Item?id=" + item.id;
                // Hiển thị vì sample đang ẩn
                itemElement.style.display = "block";
                itemElement.getElementsByClassName("card-img-top")[0].src = item.imageSrc[0];
                itemElement.getElementsByClassName("product-name-h3")[0].innerHTML = item.name;
                itemElement.getElementsByClassName("rating-quantity-sold-p")[0].innerHTML = "Đã bán " + item.sumQuantitySold + " bộ";
                itemElement.getElementsByClassName("price-sell-detail")[0].innerHTML = item.cheapestModel.price
                    + "<sup>₫</sup>";
                itemElement.getElementsByClassName("price-original-detail")[0].innerHTML = item.cheapestModel.bookCoverPrice
                    + "₫";

                itemElement.getElementsByClassName("price-discount-percent-detail")[0].innerHTML = "-" + item.cheapestModel.discount + "%";

                table.appendChild(itemElement);
            }
        }
    </script>
</body>
</html>
